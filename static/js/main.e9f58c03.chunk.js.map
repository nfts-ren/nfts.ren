{"version":3,"sources":["types/NFT.tsx","stateless/Page.tsx","stateless/Landing.tsx","hooks/usePreviewContainer.tsx","hooks/types.ts","stateless/Spinner.tsx","stateless/Card.tsx","stateless/DetailedCard.tsx","stateless/CardSeries.tsx","modals/Modal.tsx","hooks/wallets/metamask.png","hooks/wallets/walletConnect.svg","hooks/config.ts","modals/TransactionModal.tsx","hooks/useContract.ts","hooks/useConnectWeb3OnLoad.ts","hooks/useContractState.ts","hooks/useContractFunction.ts","hooks/useClaim.ts","modals/ClaimModal.tsx","stateful/ModalView.tsx","stateless/ExternalLink.tsx","stateful/Epoch.tsx","stateful/Fullpage.tsx","img/ren.svg","modals/NetworkModal.tsx","stateless/TransactionSummary.tsx","modals/AccountModal.tsx","hooks/useCopyToClipboard.ts","modals/Web3Modal.tsx","modals/AboutModal.tsx","stateful/Header.tsx","stateful/Preview.tsx","modals/TransferModal.tsx","stateful/Collection.tsx","stateful/Full16.tsx","App.tsx","theme.ts","hooks/createHistory.ts","index.tsx"],"names":["MediaType","PageDiv","styled","div","props","theme","grid","maxSm","Page","ScrollButton","button","LandingDiv","Description","h2","maxLg","maxMd","Landing","next","style","color","onClick","PreviewContainer","createContainer","useState","image","setImage","PolygonNetworks","Spinner","size","white","className","marginRight","width","height","CardOuter","small","minXl","minXxl","maxXs","Loader","position","display","left","top","justifyContent","alignItems","zIndex","RenderArtwork","nft","preview","inModal","videoRef","useRef","undefined","isVisible","useIsVisible","setLoading","onLoaded","useCallback","mediaType","Video","cursor","onLoad","src","poster","ref","url","objectFit","maxWidth","maxHeight","preload","autoPlay","loop","playsInline","muted","controls","Gif","minHeight","Image","isMobile","zoomScale","hideHint","Date","now","setTime","useEffect","interval","setInterval","clearInterval","isPaused","current","paused","autoplayNotAllowed","setAutoplayNotAllowed","play","catch","Card","offset","placeholder","DetailedCardOuter","DetailedCardBottom","ClaimButton","colors","highlight","Owned","Link","DetailedCard","onClaim","useContainer","event","preventDefault","stopPropagation","claimed","owned","to","count","CardSeriesDiv","fg","bg","ScrollButtonLeft","CardSeriesScrollable","CardSeries","outerRef","innerRef","scrollTo","useSmoothScroll","speed","direction","scrollable","setScrollable","innerWidth","Array","from","children","reduce","acc","item","clientWidth","step","scrollWidth","fullyScrolled","scrollLeft","hasScrolled","scrollRight","ModalOverlay","ModalContainer","Modal","hideModal","minWidth","maxWOverride","transform","process","REACT_APP_ETHEREUM_CHAIN_ID","REACT_APP_ETHEREUM_NODE","chainId","parseInt","ChainId","Rinkeby","wallets","Mainnet","name","icon","MetaMaskLogo","WalletConnectLogo","connector","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","desktopOnly","dappConfig","readOnlyChainId","readOnlyUrls","supportedChains","multicallAddresses","Mumbai","getExplorerTransactionLink","txHash","getExplorerAddressLink","address","sleep","ms","Promise","resolve","setTimeout","Button","TransactionModal","status","submitCallback","buttonLabel","submittingProp","noLine","submitting","disabled","useEthers","setSubmitting","error","setError","a","String","message","disableButton","flexFlow","borderTop","rejected","errorMessage","marginBottom","href","transaction","hash","target","rel","shortenTransactionHash","NFTPolygonABI","ethers","utils","Interface","NFTPolygonJSON","ClaimABI","ClaimJSON","NFTPolygonAddress","ClaimAddress","getContract","ABI","library","account","isAddress","AddressZero","Error","Contract","getSigner","connectUnchecked","getProviderOrSigner","useContract","withSignerIfPossible","useMemo","console","useClaimContract","network","useNFTPolygonContract","injected","InjectedConnector","supportedChainIds","epochData","OrderedMap","set","EpochData1","EpochData2","EpochData3","EpochData4","EpochData5","EpochData6","EpochData7","EpochData8","EpochData9","EpochData10","EpochData11","EpochData12","EpochData13","EpochData14","EpochData15","EpochData16","EpochData17","tokenIdSeparator","UseContractState","activateBrowserWallet","tried","setTried","isAuthorized","then","window","ethereum","useConnectWeb3OnLoad","claimContract","nftPolygonContract","accountBalanceRaw","balances","tokenIds","balanceMap","i","length","tokenId","toNumber","epochId","Math","floor","index","epochBalances","get","decodeBalance","useContractCall","abi","args","method","loading","loggedIn","epochDetails","data","newEpochData","epoch","id","remaining","map","x","nfts","getIn","title","merkleRoot","Buffer","slice","tokenUrls","decodeEpochData","useContractFunction","contract","functionName","state","setState","addTransaction","useTransactionsContext","send","description","date","submittedAt","wait","receipt","toast","autoClose","type","reason","code","ClaimModal","epochSeriesIndex","claim","operators","abiCoder","AbiCoder","elements","concatenated","encodeParameters","toLowerCase","keccak256","merkleTree","MerkleTree","valueSeq","toArray","getRoot","share","proof","getProof","useClaim","padding","UseModal","modal","setModal","clearModal","ModalView","ExternalLink","EpochDiv","light","EpochTopTop","EpochTopTopMobile","minMd","EpochBottom","EpochRight","EpochTitle","h3","Highlight","span","NavButton","TooltipOuter","TooltipA","Tooltip","data-tip","place","effect","ShowEpoch","previous","showClaimModal","params","accountCountFull","accountCount","min","accountClaimed","sum","backgroundColor","marginLeft","artist","fontSize","textAlign","artistLink","detailsPage","marginTop","textTransform","darknodes","operatorsCount","RenderFullPageInner","reverse","background","data-anchor","RenderFullpage","fullpageApi","setScrollingSpeed","moveSectionDown","moveSectionUp","Wrapper","Fullpage","licenseKey","scrollingSpeed","render","autoScrolling","fitToSection","fitToSectionDelay","anchors","NetworkModal","showWeb3Modal","hasEthereum","suggesting","setSuggesting","suggestPolygon","sendAsync","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","iconUrls","AStyle","TransactionSummary","tx","Title","h4","AccountModal","deactivate","transactions","logout","timeout","isCopied","setIsCopied","staticCopy","text","didCopy","copy","hide","clearTimeout","useCopyClipboard","setCopied","copyAddress","overflowY","WalletButtonStyle","WalletButton","wallet","activate","border","Web3Modal","walletsToShow","filter","mobileOnly","isMetaMask","web3Only","AboutModal","HeaderWrapper","Header","location","useLocation","shownWrongNetwork","setShownWrongNetwork","clearNetworkModal","connectCallback","match","showAccountModal","showAboutModal","Navbar","expand","Brand","Logo","Toggle","aria-controls","Collapse","Nav","Item","pathname","PreviewDiv","Overlay","X","PreviewInner","Preview","clear","e","Input","input","TransferModal","nftContract","recipient","setRecipient","recipientIsValid","value","getAddress","onChange","handleKeypress","key","onKeyPress","CollectionDiv","maxXl","Cards","showTransferModal","hasACard","hasAny","epochCards","ret","push","any","flexWrap","Collection","edition","editionCards","log","Full16","AppWrapper","App","exact","path","minSm","minLg","history","createBrowserHistory","ReactDOM","StrictMode","Provider","DAppProvider","config","document","getElementById"],"mappings":"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","file":"static/js/main.e9f58c03.chunk.js","sourcesContent":["export enum MediaType {\n  Video = 'video',\n  Image = 'image',\n  Gif = 'gif',\n}\n\nexport interface NFT {\n  name: string\n  url: string\n  mediaType: MediaType | string\n  poster?: string\n  title?: string\n\n  // Config\n  zoom?: number\n  controls?: boolean\n\n  // Live data\n  claimed?: number\n  count: number\n  tokenId?: number\n  owned?: number\n}\n\nexport interface Epoch {\n  id: number\n  nfts: NFT[]\n  light?: boolean\n  darknodes: number\n  operatorsCount: number\n  detailsPage?: string\n  artist?: string\n  artistLink?: string\n  title?: string\n  operators: { [operator: string]: number }\n\n  // Live data\n  merkleRoot?: Buffer\n  remaining?: number[]\n  tokenIds?: number[]\n  tokenUrls?: string[]\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ReactFullpage from '@fullpage/react-fullpage'\nimport styled from 'styled-components'\n\nconst PageDiv = styled.div`\n  width: 100%;\n  height: 100vh;\n\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    height: 100%;\n  }\n`\n\nconst Page = (\n  props: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >\n  // @ts-expect-error\n) => <PageDiv {...props}></PageDiv>\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ScrollButton = styled.button`\n  background: #dcb84c;\n  color: #171719;\n  border: none;\n  font-size: 20px;\n  margin-top: 50px;\n  padding: 10px 50px;\n`\n\nconst LandingDiv = styled.div`\n  /* padding-top: 200px;\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    padding-top: 80px;\n  } */\n\n  height: 100%;\n\n  display: flex;\n  flex-flow: column;\n\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Description = styled.h2`\n  font-size: 6em;\n\n  @media (max-width: ${(props) => props.theme.grid.maxLg}) {\n    font-size: 3em;\n  }\n\n  /* @media (max-width: ${(props) => props.theme.grid.maxMd}) {\n    font-size: 2em;\n  } */\n\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    text-align: center;\n  }\n`\n\nconst Landing = ({\n  next,\n  ...props\n}: { next?: () => void } & React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>) => (\n  <LandingDiv {...(props as any)}>\n    <Description>\n      <span style={{ color: '#DCB84C' }}>Earn NFTs</span>\n      <br />\n      &nbsp;by <span style={{ color: '#DCB84C' }}>running darknodes</span>\n      <br />\n      &nbsp;&nbsp;in the <span style={{ color: '#DCB84C' }}>RenVM network</span>\n      .\n    </Description>\n    {next ? <ScrollButton onClick={next}>View gallery</ScrollButton> : null}\n  </LandingDiv>\n)\n\nexport default Landing\n","import { useState } from 'react'\nimport { createContainer } from 'unstated-next'\n\nconst usePreview = () => {\n  let [image, setImage] = useState<React.ReactNode | null>(null)\n  return { image, setImage }\n}\n\nlet PreviewContainer = createContainer(usePreview)\n\nexport default PreviewContainer\n","export enum PolygonNetworks {\n  Mainnet = 137,\n  Mumbai = 80001,\n}\n","import React from 'react'\n\nexport const Spinner = ({\n  size,\n  white,\n}: {\n  size: number | string\n  white?: boolean\n}) => (\n  <div\n    className={`lds-ripple ${white ? 'white' : ''}`}\n    style={{ marginRight: '10px', width: size, height: size }}\n  >\n    <div></div>\n    <div></div>\n  </div>\n)\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { MediaType, NFT } from \"../types/NFT\";\nimport PreviewContainer from \"../hooks/usePreviewContainer\";\nimport InnerImageZoom from \"react-inner-image-zoom\";\nimport LazyLoad from \"react-lazyload\";\nimport { useIsVisible } from \"react-is-visible\";\nimport { Spinner } from \"./Spinner\";\nimport { isMobile } from \"react-device-detect\";\n\nconst CardOuter = styled.div<{ small: boolean | undefined }>`\n  height: auto;\n  width: 350px;\n  max-width: ${(props) => (props.small ? \"150px\" : \"350px\")};\n  padding: 10px;\n  max-height: 80vh;\n  /* border: 0.5px solid black; */\n\n  @media (min-width: ${(props) => props.theme.grid.minXl}) {\n    width: 400px;\n    max-width: ${(props) => (props.small ? \"150px\" : \"400px\")};\n  }\n\n  @media (min-width: ${(props) => props.theme.grid.minXxl}) {\n    width: 450px;\n    max-width: ${(props) => (props.small ? \"150px\" : \"450px\")};\n  }\n\n  @media (max-width: ${(props) => props.theme.grid.maxXs}) {\n    width: 250px;\n    padding: 5px;\n  }\n\n  &.modal-img {\n    top: 0;\n    left: 0;\n    position: fixed;\n    display: block;\n    width: 100vw;\n    height: 100vh;\n    background: #00000022;\n\n    img {\n      max-width: 500px;\n    }\n  }\n\n  img {\n    height: auto;\n    width: 100%;\n  }\n`;\n\ninterface CardProps {\n  nft: NFT;\n  small?: boolean;\n  inModal?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        display: \"flex\",\n        left: \"0\",\n        top: \"0\",\n        width: \"100%\",\n        height: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        zIndex: 1,\n      }}\n    >\n      <Spinner size={\"120px\"} white={true} />\n    </div>\n  );\n};\n\nexport const RenderArtwork = ({\n  nft,\n  small,\n  preview,\n  inModal,\n}: {\n  nft: NFT;\n  small?: boolean;\n  preview?: boolean;\n  inModal?: boolean;\n}) => {\n  const videoRef = useRef<HTMLVideoElement | undefined>(undefined);\n  const isVisible = useIsVisible(videoRef);\n  const [loading, setLoading] = useState(true);\n  const onLoaded = useCallback(() => {\n    setLoading(false);\n  }, [setLoading]);\n\n  const image =\n    nft.mediaType === MediaType.Video ? (\n      small ? (\n        <img\n          className=\"render-artwork\"\n          style={{\n            cursor: \"zoom-in\",\n          }}\n          onLoad={onLoaded}\n          src={nft.poster}\n        />\n      ) : (\n        <video\n          className=\"render-artwork\"\n          onLoad={onLoaded}\n          ref={videoRef as any}\n          src={nft.url}\n          width=\"100%\"\n          style={{\n            objectFit: \"cover\",\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            cursor: inModal || preview ? \"default\" : \"zoom-in\",\n          }}\n          poster={nft.poster}\n          preload=\"auto\"\n          autoPlay={true}\n          loop={true}\n          playsInline={true}\n          muted={true}\n          controls={preview}\n        />\n      )\n    ) : nft.mediaType === MediaType.Gif ? (\n      <img\n        className=\"render-artwork\"\n        style={{\n          cursor: inModal || preview ? \"default\" : \"zoom-in\",\n          minHeight: small ? undefined : 300,\n        }}\n        onLoad={onLoaded}\n        src={nft.url}\n      />\n    ) : nft.mediaType === MediaType.Image ? (\n      (inModal || preview) && !isMobile ? (\n        <InnerImageZoom\n          zoomScale={0.5}\n          onLoad={onLoaded}\n          hideHint={true}\n          src={nft.url}\n        />\n      ) : (\n        <img\n          className=\"render-artwork\"\n          style={{\n            cursor: inModal || preview ? \"default\" : \"zoom-in\",\n            minHeight: small ? undefined : 300,\n          }}\n          onLoad={onLoaded}\n          src={nft.url}\n        />\n      )\n    ) : null;\n\n  // Update every second to ensure\n  const [time, setTime] = useState(Date.now());\n\n  useEffect(() => {\n    if (nft.mediaType === MediaType.Video) {\n      const interval = setInterval(() => setTime(Date.now()), 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, []);\n\n  const isPaused = videoRef.current && videoRef.current.paused;\n  const [autoplayNotAllowed, setAutoplayNotAllowed] = useState(false);\n\n  useEffect(() => {\n    if (videoRef.current && isPaused && isVisible && !autoplayNotAllowed) {\n      videoRef.current.play().catch(() => {\n        setAutoplayNotAllowed(true);\n      });\n    }\n  }, [videoRef.current, isPaused, isVisible, autoplayNotAllowed]);\n\n  return (\n    <>\n      {/* {loading && nft.mediaType !== MediaType.Video ? <Loader /> : null} */}\n      {image}\n    </>\n  );\n};\n\nconst Card = (props: CardProps) => {\n  return (\n    <CardOuter onClick={props.onClick} small={props.small}>\n      <LazyLoad\n        style={{\n          minHeight: props.small ? undefined : 300,\n          position: \"relative\",\n        }}\n        height={462}\n        offset={100}\n        placeholder={<Loader />}\n      >\n        <RenderArtwork\n          small={props.small}\n          inModal={props.inModal}\n          nft={props.nft}\n        />\n      </LazyLoad>\n    </CardOuter>\n  );\n};\n\nexport default Card;\n","import React, { useCallback, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PreviewContainer from \"../hooks/usePreviewContainer\";\nimport styled from \"styled-components\";\nimport type { Epoch, NFT } from \"../types/NFT\";\nimport Card, { RenderArtwork } from \"./Card\";\n\nconst DetailedCardOuter = styled.div`\n  display: flex;\n  flex-flow: column;\n`;\nconst DetailedCardBottom = styled.div`\n  display: flex;\n  margin: 10px 40px;\n  width: calc(100% - 40px);\n\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n`;\n\nconst ClaimButton = styled.button`\n  margin-left: 20px;\n  background: none;\n  padding: 10px;\n  border: 1px solid ${(props) => props.theme.colors.highlight};\n\n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst Owned = styled(Link)`\n  color: ${(props) => props.theme.colors.highlight};\n  margin-left: 5px;\n  margin-right: 5px;\n  :hover {\n    color: ${(props) => props.theme.colors.highlight};\n  }\n`;\n\ninterface CardProps {\n  nft: NFT;\n  onClaim?: () => void;\n}\n\nconst DetailedCard = ({ nft, onClaim }: CardProps) => {\n  const { setImage } = PreviewContainer.useContainer();\n\n  const onClick = useCallback(\n    (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      event.preventDefault();\n      event.stopPropagation();\n      // setShowAsModal((current) => !current)\n      setImage(<RenderArtwork nft={nft} preview={true} />);\n    },\n    [setImage]\n  );\n\n  return (\n    <>\n      <DetailedCardOuter>\n        <Card onClick={onClick} nft={nft} />\n        <DetailedCardBottom>\n          {nft.claimed || 0}\n          {nft.owned ? (\n            <Owned to=\"/collection\">({nft.owned})</Owned>\n          ) : null} / {nft.count || 0} claimed\n          {onClaim ? <ClaimButton onClick={onClaim}>Claim</ClaimButton> : null}\n        </DetailedCardBottom>\n      </DetailedCardOuter>\n    </>\n  );\n};\n\nexport default DetailedCard;\n","import React, {\n  FunctionComponent,\n  PropsWithChildren,\n  useCallback,\n  useRef,\n  useState,\n} from \"react\";\nimport styled from \"styled-components\";\nimport type { NFT } from \"../types/NFT\";\n\nimport useSmoothScroll from \"react-smooth-scroll-hook\";\n\nconst CardSeriesDiv = styled.div`\n  width: 100%;\n  position: relative;\n`;\nconst ScrollButton = styled.button`\n  position: absolute;\n  top: 220px;\n  right: 0;\n  z-index: 1;\n  border: 1px solid ${(props) => props.theme.colors.fg};\n  background: none;\n  font-size: 2em;\n  background: ${(props) => props.theme.colors.bg};\n  color: ${(props) => props.theme.colors.fg} !important;\n  padding: 0 10px;\n`;\n\nconst ScrollButtonLeft = styled(ScrollButton)`\n  left: 0;\n  right: unset;\n`;\n\nconst CardSeriesScrollable = styled.div`\n  display: flex;\n  /* justify-content: space-around; */\n  justify-content: flex-start;\n\n  overflow-x: auto;\n\n  > div + div {\n    margin-left: 50px;\n  }\n\n  > div {\n    &:first-child {\n      padding-left: 50px;\n    }\n    &:last-child {\n      padding-right: 50px;\n    }\n  }\n`;\n\ninterface CardSeriesProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {}\n\nconst CardSeries = (props: CardSeriesProps) => {\n  const outerRef = useRef(null as HTMLDivElement | null);\n  const innerRef = useRef(null as HTMLDivElement | null);\n\n  const { scrollTo } = useSmoothScroll({\n    ref: innerRef,\n    speed: 10,\n    direction: \"x\",\n  });\n\n  const [scrollable, setScrollable] = useState(false);\n\n  const innerWidth =\n    (innerRef.current &&\n      Array.from(innerRef.current.children).reduce(\n        (acc, item) => acc + item.clientWidth + 26,\n        0\n      )) ||\n    0;\n\n  const step =\n    innerRef.current &&\n    Array.from(innerRef.current.children)[1].scrollWidth + 26;\n\n  if (\n    innerRef.current &&\n    innerRef.current.scrollWidth > innerRef.current.clientWidth\n  ) {\n    if (!scrollable) {\n      setScrollable(true);\n    }\n  } else {\n    if (scrollable) {\n      setScrollable(false);\n    }\n  }\n\n  const fullyScrolled =\n    innerRef.current &&\n    innerRef.current.scrollLeft + innerRef.current.clientWidth >=\n      innerRef.current.scrollWidth - 100;\n\n  const hasScrolled = innerRef.current && innerRef.current.scrollLeft > 0;\n\n  const scrollLeft = useCallback(() => {\n    if (innerRef.current && step !== null) {\n      scrollTo(26 + step);\n    }\n  }, [innerRef, innerWidth]);\n\n  const scrollRight = useCallback(() => {\n    if (innerRef.current && step !== null) {\n      scrollTo(-(26 + step));\n    }\n  }, [innerRef, innerWidth]);\n\n  return (\n    <CardSeriesDiv ref={outerRef}>\n      <CardSeriesScrollable ref={innerRef as any} {...props} />\n      {scrollable && !fullyScrolled ? (\n        <ScrollButton onClick={scrollLeft}>→</ScrollButton>\n      ) : (\n        \"\"\n      )}\n      {scrollable && hasScrolled ? (\n        <ScrollButtonLeft onClick={scrollRight}>←</ScrollButtonLeft>\n      ) : (\n        \"\"\n      )}\n    </CardSeriesDiv>\n  );\n};\n\nexport default CardSeries;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  maxWOverride?: number;\n  hideModal: () => void;\n}\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  left: 0%;\n  top: 0%;\n  z-index: 100;\n  background: #000;\n  opacity: 0.8;\n  width: 100vw;\n  height: 100vh;\n  cursor: pointer;\n`;\n\nconst ModalContainer = styled.div`\n  /* flex flex-col justify-evenly items-center absolute bg-white text-black border-5 border-black shadow-cardred p-c24 */\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  position: absolute;\n  background: white;\n  color: black;\n  padding: 24px;\n`;\n\nexport const Modal: React.FC<Props> = ({\n  hideModal,\n  className,\n  style,\n  children,\n  ...props\n}) => {\n  return (\n    <>\n      <ModalOverlay onClick={hideModal} />\n      <ModalContainer\n        className={className}\n        style={{\n          zIndex: 110,\n          minWidth: 300,\n          maxWidth: props.maxWOverride ? \"\" : \"96vw\",\n          maxHeight: \"96vh\",\n          position: \"fixed\",\n          transform: \"translate(-50%, -50%)\",\n          top: \"50%\",\n          left: \"50%\",\n          ...style,\n        }}\n        {...(props as any)}\n      >\n        {children}\n      </ModalContainer>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/metamask.02e3ec27.png\";","export default __webpack_public_path__ + \"static/media/walletConnect.304e3277.svg\";","import { ChainId } from \"@usedapp/core\";\nimport BigNumber from \"bignumber.js\";\nimport { BigNumber as EthersBN } from \"@ethersproject/bignumber\";\n\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\n// import { AbstractConnector } from '@web3-react/abstract-connector'\nimport MetaMaskLogo from \"./wallets/metamask.png\";\n// import CoinbaseLogo from './wallets/coinbase.svg'\nimport WalletConnectLogo from \"./wallets/walletConnect.svg\";\nimport { PolygonNetworks } from \"./types\";\n\nconst { REACT_APP_ETHEREUM_CHAIN_ID, REACT_APP_ETHEREUM_NODE } = process.env;\n\nconst chainId = parseInt(REACT_APP_ETHEREUM_CHAIN_ID || \"\") || ChainId.Rinkeby;\n\nconst NETWORK_URL = REACT_APP_ETHEREUM_NODE;\n\nexport const ChainLabel = {\n  [ChainId.Mainnet]: \"Mainnet\",\n  [ChainId.Rinkeby]: \"Rinkeby\",\n};\n\nexport interface Wallet {\n  connector?: any; // AbstractConnector\n  name: string;\n  icon: string;\n  description?: string;\n  href?: string | null;\n  color?: string;\n  primary?: true;\n  desktopOnly?: true;\n  mobileOnly?: true;\n\n  // Only show if the browser is web3-compatible, and not-metamask.\n  web3Only?: boolean;\n  noMetaMask?: boolean;\n}\n\nexport const wallets: Wallet[] = [\n  {\n    name: \"MetaMask\",\n    icon: MetaMaskLogo,\n    // connector: new InjectedConnector({\n    //   supportedChainIds: [chainId],\n    // }),\n  },\n  {\n    name: \"WalletConnect\",\n    icon: WalletConnectLogo,\n    connector: new WalletConnectConnector({\n      rpc: { [chainId]: REACT_APP_ETHEREUM_NODE || \"\" },\n      bridge: \"https://bridge.walletconnect.org\",\n      qrcode: true,\n      pollingInterval: 15000,\n    }),\n    desktopOnly: true,\n  },\n  // {\n  //   connector: new WalletLinkConnector({\n  //     url: NETWORK_URL,\n  //     appName: 'NFTS.REN',\n  //   }),\n  //   name: 'Coinbase Wallet',\n  //   icon: CoinbaseLogo,\n  //   description: 'Use Coinbase Wallet app on mobile device',\n  //   href: null,\n  //   color: '#315CF5',\n  //   desktopOnly: true,\n  // },\n];\n\nexport const connectors = {}; /* {\n  // This is how connectors get configured\n  portis: { dAppId: \"my-dapp-id-123-xyz\" },\n} */\n\nexport const dappConfig = {\n  readOnlyChainId: chainId,\n  readOnlyUrls: {\n    [chainId]: REACT_APP_ETHEREUM_NODE || \"\",\n  },\n  supportedChains: [chainId],\n  multicallAddresses: {\n    [PolygonNetworks.Mainnet]: \"0x95028E5B8a734bb7E2071F96De89BABe75be9C8E\",\n    [PolygonNetworks.Mumbai]: \"0x935Bfe9AfaA2Be26049ea4EDE40A3A2243361F87\",\n  },\n};\n\nexport const getExplorerTransactionLink = (\n  txHash: string,\n  chainId: number | undefined\n): string | undefined => {\n  if (chainId === PolygonNetworks.Mainnet) {\n    return `https://explorer-mainnet.maticvigil.com/tx/${txHash}`;\n  }\n  if (chainId === PolygonNetworks.Mumbai) {\n    return `https://explorer-mumbai.maticvigil.com/tx/${txHash}`;\n  }\n  return undefined;\n};\n\nexport const getExplorerAddressLink = (\n  address: string,\n  chainId: number | undefined\n): string | undefined => {\n  if (chainId === PolygonNetworks.Mainnet) {\n    return `https://explorer-mainnet.maticvigil.com/address/${address}`;\n  }\n  if (chainId === PolygonNetworks.Mumbai) {\n    return `https://explorer-mumbai.maticvigil.com/address/${address}`;\n  }\n  return undefined;\n};\n\nexport const toBigNumber = (\n  bn: EthersBN | undefined | null\n): any | undefined => {\n  return bn ? new BigNumber(bn.toString()) : undefined;\n};\n\nexport const toBigNumbers = (\n  bns: Array<EthersBN> | undefined | null\n): any[] | undefined => {\n  return bns ? bns.map((x) => toBigNumber(x)!) : undefined;\n};\n\nexport const toNumber = (\n  bn: EthersBN | undefined | null\n): number | undefined => {\n  return bn ? bn.toNumber() : undefined;\n};\n\nexport const toNumbers = (\n  bns: Array<EthersBN> | undefined | null\n): number[] | undefined => {\n  return bns ? bns.map((x) => toNumber(x)!) : undefined;\n};\n\nexport const formatEther = (\n  value: any | undefined,\n  round: \"UP\" | \"DOWN\",\n  digits = 4\n): string | undefined => formatToken(value, 18, round, digits);\n\nexport const formatToken = (\n  value: any | undefined,\n  decimals: number | undefined,\n  round: \"UP\" | \"DOWN\",\n  digits = 4\n): string | undefined =>\n  value !== undefined && decimals !== undefined\n    ? value.isZero()\n      ? \"0\"\n      : value\n          .dividedBy(new BigNumber(10).exponentiatedBy(decimals))\n          .decimalPlaces(\n            digits,\n            round === \"UP\" ? BigNumber.ROUND_UP : BigNumber.ROUND_DOWN\n          )\n          .toFixed()\n    : undefined;\n\nexport const sleep = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n","import React, { useCallback, useState } from 'react'\nimport { shortenTransactionHash, useEthers } from '@usedapp/core'\nimport { Modal } from './Modal'\nimport { TransactionStatus } from '../hooks/useContractFunction'\nimport styled from 'styled-components'\nimport { Spinner } from '../stateless/Spinner'\nimport { Link } from 'react-router-dom'\nimport { getExplorerTransactionLink, sleep } from '../hooks/config'\n\ninterface TransactionModalProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  submitCallback?: () => void\n  status: TransactionStatus\n  hideModal: () => void\n  buttonLabel?: string\n  submitting?: boolean\n  noLine?: boolean\n  disabled?: boolean\n}\n\nconst Button = styled.button`\n  background: ${(props) => props.theme.colors.highlight};\n  padding: 10px 40px;\n  border: none;\n  color: ${(props) => props.theme.colors.bg} !important;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  & + button {\n    margin-left: 10px;\n  }\n`\n\nexport const TransactionModal: React.FC<TransactionModalProps> = ({\n  status,\n  submitCallback,\n  hideModal,\n  buttonLabel,\n  children,\n  noLine,\n  submitting: submittingProp,\n  disabled,\n  ...props\n}) => {\n  const { chainId } = useEthers()\n  const [submitting, setSubmitting] = useState(false)\n  const [error, setError] = useState<string | undefined>()\n  const onClick = useCallback(async () => {\n    if (!submitCallback) {\n      return\n    }\n    setError(undefined)\n    await sleep(0)\n    setSubmitting(true)\n    try {\n      await submitCallback()\n    } catch (error) {\n      setError(String(error.message || error))\n    }\n    setSubmitting(false)\n  }, [submitCallback, setSubmitting])\n\n  const disableButton =\n    !submitCallback || submitting || submittingProp || disabled\n\n  return (\n    <Modal hideModal={hideModal} {...props}>\n      <div>{children}</div>\n      <div\n        style={{\n          display: 'flex',\n          flexFlow: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderTop: noLine ? '' : '',\n          width: '100%',\n        }}\n      >\n        {error ? (\n          <p\n            className=\"text-red border-red border-2 p-2 m-2 text-center mt-4\"\n            style={{ width: '100%' }}\n          >\n            {error}\n          </p>\n        ) : null}\n        {status.status === 'Fail' || status.status === 'Exception' ? (\n          <p\n            className=\"text-red border-red border-2 p-2 m-2 text-center mt-4\"\n            style={{ width: '100%' }}\n          >\n            {status.status === 'Exception' && status.rejected ? (\n              <>Transaction rejected.</>\n            ) : (\n              <>{status.errorMessage || 'An error occured'}</>\n            )}\n          </p>\n        ) : null}\n        {status.status === 'Success' ? (\n          <div\n            className=\"flex flex-col items-center justify-center\"\n            style={{\n              width: '100%',\n              display: 'flex',\n              flexFlow: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <span style={{ marginBottom: '10px' }}>\n              {buttonLabel} successful -{' '}\n              <a\n                href={getExplorerTransactionLink(\n                  status.transaction.hash,\n                  status.transaction.chainId || chainId\n                )}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {shortenTransactionHash(status.transaction.hash)}\n              </a>\n            </span>\n            <Link onClick={hideModal} to=\"/collection\" className=\"underline\">\n              View collection.\n            </Link>\n          </div>\n        ) : status.status === 'Mining' ? (\n          <>\n            <div\n              style={{\n                minWidth: '300px',\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                flexFlow: 'row',\n              }}\n            >\n              Confirming...\n              <Spinner size={40} />\n              <span>\n                <a\n                  href={getExplorerTransactionLink(\n                    status.transaction.hash,\n                    status.transaction.chainId || chainId\n                  )}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {shortenTransactionHash(status.transaction.hash)}\n                </a>\n              </span>\n            </div>\n          </>\n        ) : (\n          <Button\n            onClick={onClick}\n            style={{\n              width: '100%',\n            }}\n            disabled={disableButton}\n          >\n            {status.status === 'Fail' || status.status === 'Exception'\n              ? 'Retry'\n              : submitting || submittingProp\n              ? 'Submitting...'\n              : buttonLabel || 'Submit transaction'}\n          </Button>\n        )}\n      </div>\n    </Modal>\n  )\n}\n","import { useEthers } from '@usedapp/core'\nimport { Contract } from '@ethersproject/contracts'\nimport { ethers } from 'ethers'\nimport { useMemo } from 'react'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\n\nimport NFTPolygonJSON from './ABIs/NFTPolygon.json'\nimport ClaimJSON from './ABIs/Claim.json'\nimport { isAddress } from 'ethers/lib/utils'\nimport { PolygonNetworks } from './types'\n\nexport const NFTPolygonABI = new ethers.utils.Interface(NFTPolygonJSON)\nexport const ClaimABI = new ethers.utils.Interface(ClaimJSON)\n\nconst NFTPolygonAddress = {\n  [PolygonNetworks.Mainnet]: '0x813fce94d1855BA440186c3b201a67BF13ae1a5a',\n  [PolygonNetworks.Mumbai]: '0xb0b67A96aDbEb7Bb8294b2D388Ec5a75aCe3f600',\n}\nconst ClaimAddress = {\n  [PolygonNetworks.Mainnet]: '0x9Fd3DDb52EFa9718a8c4b807D836a011a99E8c19',\n  [PolygonNetworks.Mumbai]: '0x8A06Bf92725a9F60dA6579193d0E97AC6A39D898',\n}\n\n// account is not optional\nexport function getSigner(\n  library: Web3Provider,\n  account: string\n): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\nexport function getProviderOrSigner(\n  library: Web3Provider,\n  account?: string\n): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\nexport function getContract(\n  address: string,\n  ABI: any,\n  library: Web3Provider,\n  account?: string\n): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(\n    address,\n    ABI,\n    getProviderOrSigner(library, account) as any\n  )\n}\n\nexport function useContract(\n  address: string | undefined,\n  ABI: any,\n  withSignerIfPossible = true\n): Contract | null {\n  const { library, account } = useEthers()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(\n        address,\n        ABI,\n        library,\n        withSignerIfPossible && account ? account : undefined\n      )\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport const useClaimContract = (\n  network: PolygonNetworks | number | undefined\n) => useContract(ClaimAddress[network as PolygonNetworks], ClaimJSON, true)\n\nexport const useNFTPolygonContract = (\n  network: PolygonNetworks | number | undefined\n) =>\n  useContract(\n    NFTPolygonAddress[network as PolygonNetworks],\n    NFTPolygonJSON,\n    true\n  )\n","import { useEthers } from '@usedapp/core'\nimport { useEffect, useState } from 'react'\n\nimport { isMobile } from 'react-device-detect'\n\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { PolygonNetworks } from './types'\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [PolygonNetworks.Mainnet, PolygonNetworks.Mumbai],\n})\n\n/**\n * Automatically connect the injected web3 provider if it has already been\n * authorized.\n */\nexport function useConnectWeb3OnLoad() {\n  const { activateBrowserWallet, account } = useEthers()\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (!account && isAuthorized) {\n        activateBrowserWallet()\n      } else {\n        if (isMobile && (window as any).ethereum) {\n          activateBrowserWallet()\n        } else {\n          setTried(true)\n        }\n      }\n    })\n  }, [activateBrowserWallet]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (account) {\n      setTried(true)\n    }\n  }, [account])\n\n  return tried\n}\n","import { useContractCall, useEtherBalance, useEthers } from \"@usedapp/core\";\nimport { createContainer } from \"unstated-next\";\n\nimport BigNumber from \"bignumber.js\";\nimport {\n  NFTPolygonABI,\n  ClaimABI,\n  useNFTPolygonContract,\n  useClaimContract,\n} from \"./useContract\";\n\nimport { useConnectWeb3OnLoad } from \"./useConnectWeb3OnLoad\";\nimport { Buffer } from \"buffer\";\n\nimport EpochData1 from \"./merkle/1.json\";\nimport EpochData2 from \"./merkle/2.json\";\nimport EpochData3 from \"./merkle/3.json\";\nimport EpochData4 from \"./merkle/4.json\";\nimport EpochData5 from \"./merkle/5.json\";\nimport EpochData6 from \"./merkle/6.json\";\nimport EpochData7 from \"./merkle/7.json\";\nimport EpochData8 from \"./merkle/8.json\";\nimport EpochData9 from \"./merkle/9.json\";\nimport EpochData10 from \"./merkle/10.json\";\nimport EpochData11 from \"./merkle/11.json\";\nimport EpochData12 from \"./merkle/12.json\";\nimport EpochData13 from \"./merkle/13.json\";\nimport EpochData14 from \"./merkle/14.json\";\nimport EpochData15 from \"./merkle/15.json\";\nimport EpochData16 from \"./merkle/16.json\";\nimport EpochData17 from \"./merkle/17.json\";\nimport { Epoch } from \"../types/NFT\";\nimport { OrderedMap } from \"immutable\";\n\nconst epochData = OrderedMap<number, Epoch>()\n  .set(1, EpochData1)\n  .set(2, EpochData2)\n  .set(3, EpochData3)\n  .set(4, EpochData4)\n  .set(5, EpochData5)\n  .set(6, EpochData6)\n  .set(7, EpochData7)\n  .set(8, EpochData8)\n  .set(9, EpochData9)\n  .set(10, EpochData10)\n  .set(11, EpochData11)\n  .set(12, EpochData12)\n  .set(13, EpochData13)\n  .set(14, EpochData14)\n  .set(15, EpochData15)\n  .set(16, EpochData16)\n  .set(17, EpochData17);\nexport interface AccountNFT {\n  tokenId: any; // BigNumber\n}\n\nexport const tokenIdSeparator = 100000000;\n\nconst decodeBalance = ([balances, tokenIds]: [any[], any[]] | []):\n  | OrderedMap<number, OrderedMap<number, number>>\n  | undefined => {\n  if (!balances || !tokenIds) {\n    return undefined;\n  }\n\n  let balanceMap = OrderedMap<number, OrderedMap<number, number>>();\n  for (let i = 0; i < balances.length; i++) {\n    const tokenId = tokenIds[i].toNumber();\n    const epochId = Math.floor(tokenId / tokenIdSeparator);\n    const index = (tokenId % tokenIdSeparator) - 1;\n    let epochBalances = balanceMap.get(epochId) || OrderedMap<number, number>();\n    epochBalances = epochBalances.set(index, balances[i].toNumber());\n\n    balanceMap = balanceMap.set(epochId, epochBalances);\n  }\n  return balanceMap;\n};\n\nconst decodeEpochData = (\n  data: any[] | undefined,\n  balances: OrderedMap<number, OrderedMap<number, number>> | undefined\n): OrderedMap<number, Epoch> => {\n  if (!data) {\n    return epochData;\n  }\n\n  let newEpochData = epochData;\n  for (const epoch of data) {\n    const id = epoch.id.toNumber();\n    const current = epochData.get(id, undefined)!;\n\n    if (!current) {\n      continue;\n    }\n\n    const remaining = epoch.remaining.map((x: any) => x.toNumber());\n    const tokenIds = epoch.remaining.map((x: any) => x.toNumber());\n\n    const nfts = current.nfts.map((nft, i) => ({\n      ...nft,\n      claimed: nft.count - remaining[i],\n      owned: balances ? balances.getIn([id, i], undefined) : undefined,\n      tokenId: id * tokenIdSeparator + i + 1,\n      title: current.title,\n    }));\n\n    newEpochData = newEpochData.set(id, {\n      ...current,\n      nfts,\n      id: id,\n      merkleRoot: Buffer.from(epoch.merkleRoot.slice(2), \"hex\"),\n      remaining: epoch.remaining.map((x: any) => x.toNumber()),\n      tokenIds: epoch.remaining.map((x: any) => x.toNumber()),\n      tokenUrls: epoch.tokenUrls,\n    });\n  }\n\n  return newEpochData;\n};\n\n/**\n * useContractStateContainer() returns live stats about the collections and about the logged-in\n * account's NFT balances.\n */\nfunction useContractStateContainer() {\n  // Try to connect to the injected web3 provider on load.\n  useConnectWeb3OnLoad();\n\n  const { account, chainId } = useEthers();\n\n  const claimContract = useClaimContract(chainId);\n  const nftPolygonContract = useNFTPolygonContract(chainId);\n\n  // Fetch claim contract's nft balance.\n  const accountBalanceRaw = decodeBalance(\n    // @ts-expect-error\n    useContractCall(\n      account && claimContract?.address && nftPolygonContract?.address\n        ? {\n            abi: NFTPolygonABI,\n            address: nftPolygonContract.address,\n            args: [account],\n            method: \"balanceOfAll\",\n          }\n        : undefined\n    ) || []\n  );\n\n  const epochDetails = decodeEpochData(\n    (useContractCall(\n      claimContract?.address\n        ? {\n            abi: ClaimABI,\n            address: claimContract.address,\n            args: [],\n            method: \"getEpochs\",\n          }\n        : undefined\n    ) || [])[0],\n    accountBalanceRaw\n  );\n\n  return {\n    loading: accountBalanceRaw === undefined,\n    account,\n    loggedIn: !!account,\n    epochDetails,\n  };\n}\n\nexport const UseContractState = createContainer(useContractStateContainer);\n","import { useState } from 'react'\nimport {\n  TransactionReceipt,\n  TransactionResponse,\n} from '@ethersproject/abstract-provider'\nimport {\n  ChainId,\n  shortenTransactionHash,\n  useEthers,\n  useTransactionsContext,\n} from '@usedapp/core'\nimport { Contract } from 'ethers'\nimport { toast } from 'react-toastify'\n\nexport type TransactionStatus =\n  | {\n      status: 'None'\n    }\n  | {\n      status: 'Mining'\n      chainId: ChainId\n      transaction: TransactionResponse\n    }\n  | {\n      status: 'Success'\n      chainId: ChainId\n      transaction: TransactionResponse\n      receipt: TransactionReceipt\n    }\n  | {\n      status: 'Fail'\n      transaction: TransactionResponse\n      receipt: TransactionReceipt\n      chainId: ChainId\n      errorMessage: string\n    }\n  | {\n      status: 'Exception'\n      chainId: ChainId\n      errorMessage: string\n      rejected?: boolean\n    }\n\nexport function useContractFunction(contract: Contract, functionName: string) {\n  const [state, setState] = useState<TransactionStatus>({ status: 'None' })\n  const { addTransaction } = useTransactionsContext()\n  const { chainId } = useEthers()\n\n  let transaction: TransactionResponse\n\n  const send = async (\n    description: string,\n    ...args: any[]\n  ): Promise<boolean> => {\n    if (!chainId) {\n      return false\n    }\n\n    try {\n      transaction = await contract[functionName](...args)\n      setState({ transaction, status: 'Mining', chainId })\n      const date = Date.now()\n      addTransaction({\n        transaction: {\n          ...transaction,\n          chainId,\n        },\n        submittedAt: date,\n        // @ts-expect-error\n        description,\n      })\n\n      const receipt = await transaction.wait()\n      if (receipt.status === 0) {\n        toast(\n          `Error: ${description} (${shortenTransactionHash(transaction.hash)})`,\n          { autoClose: 10000, type: 'error' }\n        )\n      } else {\n        toast(\n          `Confirmed: ${description} (${shortenTransactionHash(\n            transaction.hash\n          )})`,\n          { autoClose: 10000 }\n        )\n      }\n      setState({ receipt, transaction, status: 'Success', chainId })\n      return true\n    } catch (e) {\n      console.error(e)\n      if (transaction) {\n        setState({\n          status: 'Fail',\n          transaction,\n          receipt: e.receipt,\n          errorMessage: e.reason || e.message,\n          chainId,\n        })\n      } else {\n        setState({\n          status: 'Exception',\n          errorMessage: e.reason || e.message,\n          chainId,\n          rejected: e?.code === 4001,\n        })\n      }\n      return false\n    }\n  }\n\n  return { send, state }\n}\n","import { useCallback, useEffect } from 'react'\nimport { useEthers } from '@usedapp/core'\nimport AbiCoder, { AbiCoder as AbiCoderType } from 'web3-eth-abi'\nimport { keccak256 } from 'ethereumjs-util'\nimport { OrderedMap } from 'immutable'\nimport MerkleTree from 'merkle-tree-solidity'\nimport { ClaimABI, getContract, useClaimContract } from './useContract'\nimport { Buffer } from 'buffer'\nimport { UseContractState } from './useContractState'\nimport { useContractFunction } from './useContractFunction'\n\nexport const useClaim = () => {\n  const { account, chainId, library } = useEthers()\n  const { epochDetails } = UseContractState.useContainer()\n\n  const claimContract = useClaimContract(chainId)!\n\n  const { send, state } = useContractFunction(claimContract, 'claim')\n\n  const claim = useCallback(\n    async (epochId: number, epochSeriesIndex: number) => {\n      const epoch = epochDetails.get(epochId)\n      if (!account || !epoch) {\n        return\n      }\n\n      const operators = OrderedMap(epoch.operators)\n      const abiCoder = (AbiCoder as unknown) as AbiCoderType\n\n      const elements = operators.map((count, address) => {\n        const concatenated = Buffer.from(\n          abiCoder\n            .encodeParameters(\n              ['address', 'uint256'],\n              [address.toLowerCase(), count]\n            )\n            .slice(2),\n          'hex'\n        )\n        return keccak256(concatenated)\n      })\n\n      const merkleTree = new MerkleTree(elements.valueSeq().toArray())\n\n      const merkleRoot = merkleTree.getRoot()\n\n      const share = operators.get(account.toLowerCase())\n\n      const hash = keccak256(\n        Buffer.from(\n          abiCoder\n            .encodeParameters(\n              ['address', 'uint256'],\n              [account.toLowerCase(), share]\n            )\n            .slice(2),\n          'hex'\n        )\n      )\n\n      const proof = merkleTree.getProof(hash)\n\n      return await send(\n        `Claim Epoch ${epochId}-${epochSeriesIndex + 1}`,\n        epochId,\n        proof,\n        share,\n        [epochSeriesIndex]\n      )\n    },\n    []\n  )\n\n  return {\n    claim,\n    state,\n  }\n}\n","import React, { useCallback, useEffect, useState } from 'react'\n\nimport { useEthers } from '@usedapp/core'\nimport { getAddress } from '@ethersproject/address'\nimport { TransactionModal } from './TransactionModal'\nimport { useClaim } from '../hooks/useClaim'\nimport type { Epoch, NFT } from '../types/NFT'\nimport Card from '../stateless/Card'\n\ninterface ClaimModalProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  epoch: Epoch\n  nft: NFT\n  epochSeriesIndex: number\n\n  hideModal: () => void\n}\n\nexport const ClaimModal: React.FC<ClaimModalProps> = ({\n  title,\n  epoch,\n  nft,\n  epochSeriesIndex,\n  hideModal,\n  ...props\n}) => {\n  const { account } = useEthers()\n\n  const { claim, state } = useClaim()\n\n  const [submitting, setSubmitting] = useState(false)\n  const submitCallback = useCallback(async () => {\n    setSubmitting(true)\n    try {\n      await claim(epoch.id, epochSeriesIndex)\n      setSubmitting(false)\n    } catch (error) {\n      setSubmitting(false)\n      throw error\n    }\n  }, [account, claim, epoch, epochSeriesIndex])\n\n  return (\n    <TransactionModal\n      buttonLabel={`Claim`}\n      submitCallback={submitCallback}\n      status={state}\n      submitting={submitting}\n      noLine={true}\n      hideModal={hideModal}\n      style={{\n        padding: 30,\n      }}\n      {...props}\n    >\n      <Card inModal={true} nft={nft} />\n    </TransactionModal>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { createContainer } from 'unstated-next'\n\n/**\n * useModalContainer() returns live stats about the collections and about the logged-in\n * account's NFT balances.\n */\nfunction useModalContainer() {\n  const [modal, setModal] = useState<React.ReactNode | undefined>(undefined)\n  const clearModal = useCallback(() => {\n    setModal(undefined)\n  }, [setModal])\n\n  return {\n    modal,\n    setModal,\n    clearModal,\n  }\n}\n\nexport const UseModal = createContainer(useModalContainer)\n\nexport const ModalView = () => {\n  const { modal } = UseModal.useContainer()\n  return <>{modal}</>\n}\n","import React from 'react'\n\ninterface Props extends React.AnchorHTMLAttributes<HTMLAnchorElement> {}\n\nexport const ExternalLink: React.FC<Props> = ({ children, ...props }) => (\n  <a {...props} target=\"_blank\" rel=\"noopener noreferrer\">\n    {children}\n  </a>\n)\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Card from \"../stateless/Card\";\nimport DetailedCard from \"../stateless/DetailedCard\";\nimport type { Epoch, NFT } from \"../types/NFT\";\n\nimport Container from \"../styled/Container\";\nimport CardSeries from \"../stateless/CardSeries\";\nimport { ClaimModal } from \"../modals/ClaimModal\";\nimport { useEthers } from \"@usedapp/core\";\nimport { UseModal } from \"./ModalView\";\nimport { ExternalLink } from \"../stateless/ExternalLink\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Link } from \"react-router-dom\";\n\nconst EpochDiv = styled.div<{ light: boolean | undefined }>`\n  display: flex;\n  flex-flow: column;\n\n  height: 100%;\n\n  padding-top: 200px;\n\n  @media (max-height: 850px) {\n    padding-top: 100px;\n  }\n\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    padding-top: 80px;\n  }\n\n  color: ${(props) =>\n    props.light ? props.theme.colors.bg : props.theme.colors.fg};\n\n  button {\n    color: ${(props) =>\n      props.light ? props.theme.colors.bg : props.theme.colors.fg};\n  }\n`;\n\nconst EpochTopTop = styled.div`\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    display: none;\n  }\n\n  padding: 0 100px;\n  min-width: 500px;\n  @media (max-width: ${(props) => props.theme.grid.maxLg}) {\n    min-width: 400px;\n  }\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    padding: 0 20px;\n    min-width: 200px;\n  }\n  @media (max-width: ${(props) => props.theme.grid.maxXs}) {\n    min-width: 150px;\n  }\n  padding-right: 20px;\n  margin-bottom: 30px;\n`;\n\nconst EpochTopTopMobile = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: ${(props) => props.theme.grid.minMd}) {\n    display: none;\n  }\n`;\n\nconst EpochBottom = styled.div`\n  display: flex;\n  flex-flow: column;\n  padding: 20px 100px;\n  /* z-index: 2; */\n\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    display: none;\n  }\n`;\n\nconst EpochRight = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-start;\n  max-width: 100vw;\n  /* align-items: center; */\n`;\n\nconst EpochTitle = styled.h3`\n  font-size: 3em;\n\n  @media (max-width: ${(props) => props.theme.grid.maxLg}) {\n    font-size: 2em;\n  }\n`;\n\nconst Highlight = styled.span`\n  color: ${(props) => props.theme.colors.highlight};\n`;\n\nconst NavButton = styled.button`\n  background: ${(props) => props.theme.colors.highlight};\n  padding: 10px 40px;\n  border: none;\n  color: ${(props) => props.theme.colors.bg} !important;\n\n  & + button {\n    margin-left: 10px;\n  }\n`;\n\nconst TooltipOuter = styled.div`\n  display: inline-block;\n  > div {\n    max-width: 300px;\n    text-align: center;\n  }\n`;\nconst TooltipA = styled.a`\n  border: 1px solid ${(props) => props.theme.colors.highlight};\n  padding: 2px;\n  color: inherit;\n  width: 25px;\n  display: inline-block;\n  text-align: center;\n  :hover {\n    text-decoration: none;\n    color: inherit;\n    cursor: pointer;\n  }\n`;\n\nconst Tooltip: React.FC = ({ children }) => {\n  return (\n    <TooltipOuter>\n      <TooltipA data-tip=\"React-tooltip\">i</TooltipA>\n      <ReactTooltip place=\"top\" type=\"light\" effect=\"solid\">\n        {children}\n      </ReactTooltip>\n    </TooltipOuter>\n  );\n};\n\nexport const ShowEpoch = ({\n  next,\n  previous,\n  epoch,\n  i,\n  ...props\n}: {\n  epoch: Epoch;\n  i: number;\n  next?: () => void;\n  previous?: () => void;\n} & React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>) => {\n  const { account } = useEthers();\n\n  const { setModal, clearModal } = UseModal.useContainer();\n  const showClaimModal = useCallback(\n    (params: { epoch: Epoch; nft: NFT; epochSeriesIndex: number }) => {\n      setModal(\n        <ClaimModal\n          epoch={params.epoch}\n          nft={params.nft}\n          epochSeriesIndex={params.epochSeriesIndex}\n          hideModal={clearModal}\n        />\n      );\n    },\n    [setModal]\n  );\n\n  const accountCountFull = useMemo(\n    () =>\n      account && epoch ? epoch.operators[account.toLowerCase()] : undefined,\n    [account, epoch]\n  );\n\n  const accountCount = useMemo(\n    () =>\n      account && epoch\n        ? Math.min(epoch.operators[account.toLowerCase()], 6)\n        : undefined,\n    [account, epoch]\n  );\n\n  const accountClaimed = useMemo(\n    () =>\n      account && epoch\n        ? epoch.nfts.reduce((sum, nft) => sum + (nft.owned || 0), 0)\n        : undefined,\n    [account, epoch]\n  );\n\n  return (\n    <>\n      <EpochDiv light={epoch.light} {...(props as any)}>\n        <EpochRight className=\"col-xl-9\">\n          <EpochTopTopMobile>\n            <EpochTitle>\n              EPOCH{\" \"}\n              <span\n                style={{\n                  backgroundColor: \"#DCB84C\",\n                  padding: 10,\n                  marginLeft: -10,\n                }}\n              >\n                {epoch.id}\n              </span>\n            </EpochTitle>\n            {epoch.artist ? (\n              <span style={{ fontSize: 18, textAlign: \"right\" }}>\n                by{\" \"}\n                <ExternalLink\n                  target=\"_blank\"\n                  href={epoch.artistLink}\n                  style={{ color: \"#DCB84C\" }}\n                >\n                  @{epoch.artist}\n                </ExternalLink>\n              </span>\n            ) : null}\n            {account && accountCount && accountCount > 0 ? (\n              <>\n                <br />\n                <span>\n                  <Highlight>\n                    {accountClaimed}/{accountCount}\n                  </Highlight>{\" \"}\n                  claimed by <Highlight>{account.slice(0, 8)}</Highlight>\n                </span>\n              </>\n            ) : null}\n            {epoch.detailsPage ? (\n              <>\n                <Link\n                  style={{ marginTop: 10, marginBottom: 10 }}\n                  to={epoch.detailsPage}\n                >\n                  full gallery.\n                </Link>\n              </>\n            ) : null}\n          </EpochTopTopMobile>\n          <CardSeries className=\"no-scrollbar\">\n            <EpochTopTop>\n              {epoch.title ? (\n                <div>\n                  <EpochTitle\n                    style={{ textTransform: \"uppercase\", marginBottom: 0 }}\n                  >\n                    {epoch.title}\n                  </EpochTitle>\n                </div>\n              ) : (\n                <EpochTitle>\n                  EPOCH{\" \"}\n                  <span\n                    style={{\n                      backgroundColor: \"#DCB84C\",\n                      padding: 10,\n                      marginLeft: -10,\n                    }}\n                  >\n                    {epoch.id}\n                  </span>\n                </EpochTitle>\n              )}\n              {epoch.title ? (\n                <>\n                  <span>\n                    epoch {epoch.id} - artist feature{\" \"}\n                    <Tooltip>\n                      Artist features are drops by established or upcoming NFT\n                      artists, featuring artworks that aren't necessarily\n                      Ren-themed.\n                    </Tooltip>\n                  </span>\n                  <br />\n                </>\n              ) : null}\n              {epoch.artist ? (\n                <div style={{ marginBottom: \"20px\" }}>\n                  by{\" \"}\n                  <ExternalLink\n                    target=\"_blank\"\n                    href={epoch.artistLink}\n                    style={{ color: \"#DCB84C\" }}\n                  >\n                    @{epoch.artist}\n                  </ExternalLink>\n                  .\n                </div>\n              ) : null}\n              {epoch.darknodes} darknodes.\n              <br />\n              {epoch.operatorsCount} operators.\n              {account &&\n              accountCount &&\n              accountCount > 0 &&\n              accountClaimed !== undefined ? (\n                <>\n                  <br />\n                  <Highlight>\n                    {accountClaimed}/{accountCount}\n                  </Highlight>{\" \"}\n                  claimed by <Highlight>{account.slice(0, 8)}</Highlight>.\n                  {accountCountFull &&\n                  accountCount &&\n                  accountCountFull > accountCount ? (\n                    <>\n                      {\" \"}\n                      <Tooltip>\n                        You can claim one NFT per darknode you run, up to a\n                        total of 6 per epoch.\n                      </Tooltip>\n                    </>\n                  ) : null}\n                </>\n              ) : null}\n              {epoch.detailsPage ? (\n                <>\n                  <br />\n                  <Link to={epoch.detailsPage}>full gallery.</Link>\n                </>\n              ) : null}\n            </EpochTopTop>\n\n            {epoch.nfts.map((nft, epochSeriesIndex) => {\n              const onClaim = () => {\n                showClaimModal({ epoch: { ...epoch }, nft, epochSeriesIndex });\n              };\n              return (\n                <DetailedCard\n                  key={nft.name}\n                  nft={nft}\n                  onClaim={\n                    account &&\n                    accountCount &&\n                    accountClaimed !== undefined &&\n                    accountClaimed < accountCount\n                      ? onClaim\n                      : undefined\n                  }\n                />\n              );\n            })}\n          </CardSeries>\n        </EpochRight>\n        <EpochBottom>\n          <div style={{ marginTop: 20 }}>\n            <NavButton onClick={previous}>previous</NavButton>\n            {next ? <NavButton onClick={next}>next</NavButton> : null}\n          </div>\n        </EpochBottom>\n      </EpochDiv>\n    </>\n  );\n};\n","import * as qs from \"query-string\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\nimport styled from \"styled-components\";\nimport Page from \"../stateless/Page\";\nimport Landing from \"../stateless/Landing\";\n\nimport { ShowEpoch } from \"./Epoch\";\n\nimport { useLocation } from \"react-router-dom\";\nimport { maxMd } from \"../theme\";\nimport { UseContractState } from \"../hooks/useContractState\";\nimport { history } from \"../hooks/createHistory\";\nimport { isMobile } from \"react-device-detect\";\n\nconst RenderFullPageInner = ({\n  next,\n  previous,\n}: {\n  next: (() => void) | undefined;\n  previous: (() => void) | undefined;\n}) => {\n  const { epochDetails } = UseContractState.useContainer();\n\n  return (\n    <>\n      <div className=\"section\">\n        <Page>\n          <Landing next={next} />\n        </Page>\n      </div>\n      {epochDetails\n        .reverse()\n        .map((epoch, i) => (\n          <div className=\"section\" key={epoch.id}>\n            <Page\n              style={{\n                background: epoch.light ? \"#fff\" : \"#000\",\n                ...(epoch.light ? { color: \"#000\" } : {}),\n              }}\n              data-anchor={`epoch-${i}`}\n            >\n              <ShowEpoch\n                i={i}\n                epoch={epoch}\n                previous={previous}\n                next={i == 1 ? undefined : next}\n              />\n            </Page>\n          </div>\n        ))\n        .valueSeq()\n        .toArray()}\n    </>\n  );\n};\n\n// TODO: Come up with a better solution than a global variable.\nconst RenderFullpage = ({ state, fullpageApi }: any) => {\n  if (fullpageApi) {\n    setTimeout(() => {\n      fullpageApi.setScrollingSpeed(1000);\n    }, 1000);\n  }\n\n  const next = fullpageApi\n    ? () => {\n        fullpageApi.moveSectionDown();\n      }\n    : undefined;\n\n  const previous = fullpageApi\n    ? () => {\n        fullpageApi.moveSectionUp();\n      }\n    : undefined;\n\n  return (\n    <ReactFullpage.Wrapper>\n      <RenderFullPageInner next={next} previous={previous} />\n    </ReactFullpage.Wrapper>\n  );\n};\n\nexport const Fullpage = () => {\n  const { epochDetails } = UseContractState.useContainer();\n\n  // const onLeave = (origin: any, destination: any, direction: any) => {\n  //   console.log('nLeave', origin.index, destination.index)\n  //   let currentUrlParams = new URLSearchParams(window.location.search)\n  //   if (destination.index == 0) {\n  //     currentUrlParams.delete('epoch')\n  //   } else {\n  //     currentUrlParams.set('epoch', String(1 + 13 - destination.index))\n  //   }\n  //   history.replace(\n  //     window.location.pathname + '?' + currentUrlParams.toString()\n  //   )\n  // }\n\n  return (\n    <ReactFullpage\n      //fullpage options\n      // TODO: Request license key.\n      licenseKey={\"11111111-11111111-11111111-11111111\"}\n      scrollingSpeed={0} /* Options here */\n      // onLeave={onLeave}\n      render={RenderFullpage}\n      autoScrolling={false}\n      fitToSection={!isMobile}\n      fitToSectionDelay={500}\n      anchors={[\n        \"home\",\n        ...epochDetails\n          .map((x) => `epoch-${x.id}`)\n          .reverse()\n          .valueSeq()\n          .toArray(),\n      ]}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/ren.9f2efbcb.svg\";","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Modal } from './Modal'\n\nconst Button = styled.button`\n  background: ${(props) => props.theme.colors.highlight};\n  padding: 10px 40px;\n  border: none;\n  color: ${(props) => props.theme.colors.bg} !important;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  & + button {\n    margin-left: 10px;\n  }\n`\n\ninterface ClaimModalProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  showWeb3Modal: () => void\n  hideModal: () => void\n}\n\nexport const NetworkModal: React.FC<ClaimModalProps> = ({\n  title,\n  hideModal,\n  showWeb3Modal,\n  ...props\n}) => {\n  const hasEthereum = (window as any).ethereum\n\n  const [suggesting, setSuggesting] = useState(false)\n\n  const suggestPolygon = useCallback(async () => {\n    setSuggesting(true)\n    try {\n      await (window as any).ethereum.sendAsync({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: '0x89', // A 0x-prefixed hexadecimal string\n            chainName: 'Polygon',\n            nativeCurrency: {\n              name: 'MATIC',\n              symbol: 'MATIC', // 2-6 characters long\n              decimals: 18,\n            },\n            rpcUrls: ['https://rpc-mainnet.maticvigil.com/'],\n            blockExplorerUrls: ['https://explorer-mainnet.maticvigil.com/'],\n            iconUrls: [], // Currently ignored.\n          },\n        ],\n      })\n      showWeb3Modal()\n    } catch (error) {\n      console.error(error)\n    }\n    setSuggesting(false)\n  }, [])\n\n  return (\n    <Modal\n      hideModal={hideModal}\n      style={{\n        padding: 30,\n      }}\n      {...props}\n    >\n      <div\n        style={{\n          display: 'flex',\n          flexFlow: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          maxWidth: 400,\n        }}\n      >\n        <h5 style={{ marginBottom: '20px' }}>Connect to Polygon</h5>\n        <p style={{ textAlign: 'center', marginBottom: '20px' }}>\n          NFTs.REN has been deployed on Ethereum and then bridged to Polygon\n          (MATIC) to reduce claiming gas fees. Bridging back to Ethereum will be\n          provided soon.\n          <br />\n          <br />\n          Darknode operators have been airdropped 0.05 MATIC to cover claiming\n          fees.\n        </p>\n      </div>\n\n      {hasEthereum ? (\n        <Button disabled={suggesting} onClick={suggestPolygon}>\n          Add Polygon to MetaMask\n        </Button>\n      ) : null}\n    </Modal>\n  )\n}\n","import { shortenTransactionHash } from '@usedapp/core'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { getExplorerTransactionLink } from '../hooks/config'\nimport { Spinner } from '../stateless/Spinner'\n\nconst AStyle = styled.a`\n  display: flex;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport const TransactionSummary = ({ tx }: { tx: any }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexFlow: 'row',\n        justifyContent: 'between',\n        minWidth: '300px',\n      }}\n    >\n      <AStyle\n        href={getExplorerTransactionLink(\n          tx.transaction.hash,\n          tx.transaction.chainId\n        )}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {tx.description\n          ? tx.description\n          : shortenTransactionHash(tx.transaction.hash)}{' '}\n      </AStyle>\n      <div>\n        {!tx.receipt ? (\n          <Spinner size={40} />\n        ) : tx.transaction.status === 0 ? (\n          '✘'\n        ) : tx.transaction.status === 1 ? (\n          '✔'\n        ) : (\n          ''\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback } from \"react\";\nimport { useEthers, useTransactionsContext } from \"@usedapp/core\";\nimport styled from \"styled-components\";\nimport { Modal } from \"./Modal\";\nimport { utils } from \"ethers\";\nimport { TransactionSummary } from \"../stateless/TransactionSummary\";\nimport useCopyClipboard from \"../hooks/useCopyToClipboard\";\nimport { getExplorerAddressLink } from \"../hooks/config\";\nimport { ExternalLink } from \"../stateless/ExternalLink\";\n\nconst Title = styled.h4`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 400px;\n  max-width: 80vw;\n  flex: 1;\n`;\n\nconst Button = styled.button`\n  border: 1px solid ${(props) => props.theme.colors.highlight};\n  background: none;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  padding: 10px;\n`;\n\ninterface AccountModalProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  hideModal: () => void;\n}\n\nexport function shortenString(str: string, length = 10) {\n  length = Math.min(length, str.length);\n  const leftSide = Math.floor((length - 2) / 2) + 2;\n  const rightSide = length - leftSide;\n  return length === str.length\n    ? str\n    : str.substring(0, leftSide) +\n        \"...\" +\n        str.substring(str.length - rightSide);\n}\n\nexport function shortenAddress(address: string, length = 10): string {\n  try {\n    const formattedAddress = utils.getAddress(address);\n    return shortenString(formattedAddress, length);\n  } catch {\n    throw new TypeError(\"Invalid input, address can't be parsed\");\n  }\n}\n\nexport const AccountModal: React.FC<AccountModalProps> = ({\n  hideModal,\n  ...props\n}) => {\n  const { account, deactivate, chainId } = useEthers();\n  const { transactions } = useTransactionsContext();\n\n  const logout = useCallback(() => {\n    deactivate();\n    hideModal();\n  }, [deactivate, hideModal]);\n\n  const [isCopied, setCopied] = useCopyClipboard(1000);\n  const copyAddress = useCallback(() => {\n    if (account) {\n      setCopied(account);\n    }\n  }, [account, setCopied]);\n\n  return (\n    <Modal\n      hideModal={hideModal}\n      style={{\n        width: 500,\n        maxWidth: \"90vw\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"flex-start\",\n        background: \"none\",\n        padding: 0,\n      }}\n      {...props}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexFlow: \"column\",\n          alignItems: \"flex-start\",\n          background: \"white\",\n          padding: 20,\n        }}\n      >\n        <div className=\"flex flex-col\">\n          <Title className=\"font-sans text-red text-c18 font-bold\">\n            Account: {account}\n          </Title>\n        </div>\n        <div\n          style={{\n            marginTop: \"10  px\",\n            display: \"flex\",\n            flexFlow: \"row\",\n            width: \"100%\",\n            alignItems: \"space-between\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Button\n            className={`${\n              !isCopied ? \"cursor-pointer hover:underline\" : \"cursor-default\"\n            } outline-none font-sans sm:ml-auto flex items-center`}\n            // outline-none wasn't working\n            onClick={copyAddress}\n          >\n            {isCopied ? <>Copied</> : <>Copy address</>}\n          </Button>\n          <ExternalLink href={getExplorerAddressLink(account || \"\", chainId)}>\n            <Button>View in explorer</Button>\n          </ExternalLink>\n          <Button onClick={logout}>Logout</Button>\n        </div>\n      </div>\n      <div\n        style={{\n          background: \"white\",\n          padding: 20,\n          width: \"100%\",\n          marginTop: 8,\n        }}\n      >\n        <div>\n          <h4>Transaction History</h4>{\" \"}\n        </div>\n        <ul\n          style={{\n            maxHeight: \"60vh\",\n            overflowY: \"auto\",\n            display: \"flex\",\n            flexFlow: \"column\",\n            marginBottom: 0,\n          }}\n        >\n          {transactions && chainId && transactions[chainId]\n            ? (transactions as any)[chainId].map((tx: any) => {\n                return (\n                  <li>\n                    <TransactionSummary tx={tx} />\n                  </li>\n                );\n              })\n            : null}\n        </ul>\n      </div>\n    </Modal>\n  );\n};\n","import copy from 'copy-to-clipboard'\nimport { useCallback, useEffect, useState } from 'react'\n\nexport default function useCopyClipboard(\n  timeout = 500\n): [boolean, (toCopy: string) => void] {\n  const [isCopied, setIsCopied] = useState(false)\n\n  const staticCopy = useCallback((text) => {\n    const didCopy = copy(text)\n    setIsCopied(didCopy)\n  }, [])\n\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n\n      return () => {\n        clearTimeout(hide)\n      }\n    }\n    return undefined\n  }, [isCopied, setIsCopied, timeout])\n\n  return [isCopied, staticCopy]\n}\n","import React from 'react'\nimport { useEthers } from '@usedapp/core'\nimport { Wallet, wallets } from '../hooks/config'\nimport { Modal } from '../modals/Modal'\nimport { isMobile } from 'react-device-detect'\nimport styled from 'styled-components'\n\nconst WalletButtonStyle = styled.button`\n  border: 1px solid ${(props) => props.theme.colors.highlight};\n  padding: 10px;\n  width: 100%;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n\n  & + button {\n    margin-top: 10px;\n  }\n\n  img,\n  svg {\n    max-width: 20px;\n    max-height: 20px;\n  }\n`\n\nconst WalletButton: React.FC<{ wallet: Wallet; hideModal: () => void }> = ({\n  wallet: { name, icon, href, connector },\n  hideModal,\n}) => {\n  const { activateBrowserWallet, activate } = useEthers()\n\n  const onClick = () => {\n    hideModal()\n    if (connector) {\n      activate(connector, undefined, true).catch(console.error)\n    } else {\n      activateBrowserWallet()\n    }\n  }\n\n  return href ? (\n    <a\n      style={{ display: 'flex', border: '1px solid black', padding: '5px' }}\n      className=\"hoverUp\"\n      key={name}\n      href={href}\n    >\n      <img\n        style={{\n          width: 20,\n          height: 20,\n          marginRight: 20,\n        }}\n        src={icon}\n      />\n      {name}\n    </a>\n  ) : (\n    <WalletButtonStyle\n      style={{ display: 'flex' }}\n      className=\"hoverUp\"\n      key={name}\n      onClick={onClick}\n    >\n      <img\n        style={{\n          marginRight: 20,\n        }}\n        src={icon}\n      />\n      {name}\n    </WalletButtonStyle>\n  )\n}\n\nexport const Web3Modal = ({ hideModal }: { hideModal: () => void }) => {\n  let walletsToShow = wallets\n  if (isMobile) {\n    // On mobile, only show wallets that aren't desktop-only.\n    walletsToShow = walletsToShow.filter((wallet) => !wallet.desktopOnly)\n  } else {\n    // On desktop, only show wallets that aren't mobile-only.\n    walletsToShow = walletsToShow.filter((wallet) => !wallet.mobileOnly)\n  }\n\n  const isMetaMask =\n    (window as any).ethereum && (window as any).ethereum.isMetaMask\n\n  if (!(window as any).ethereum || isMetaMask) {\n    // Filter wallets that shouldn't be shown if there's no web3 connected.\n    walletsToShow = walletsToShow.filter((wallet) => !wallet.web3Only)\n  }\n\n  if ((window as any).ethereum && !isMetaMask) {\n    // On web3 browsers that aren't metamask, don't show metamask.\n    walletsToShow = walletsToShow.filter((wallet) => wallet.name !== 'MetaMask')\n  }\n\n  return (\n    <Modal hideModal={hideModal} className=\"grid grid-cols-1 gap-4\">\n      {walletsToShow.map((wallet) => (\n        <WalletButton wallet={wallet} hideModal={hideModal} />\n      ))}\n    </Modal>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Modal } from './Modal'\n\ninterface ClaimModalProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  hideModal: () => void\n}\n\nconst Highlight = styled.span`\n  color: ${(props) => props.theme.colors.highlight};\n`\n\nexport const AboutModal: React.FC<ClaimModalProps> = ({\n  hideModal,\n  ...props\n}) => {\n  return (\n    <Modal\n      hideModal={hideModal}\n      style={{\n        padding: 30,\n      }}\n      {...props}\n    >\n      <div\n        style={{\n          display: 'flex',\n          flexFlow: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          maxWidth: 400,\n        }}\n      >\n        <h5 style={{ marginBottom: '20px' }}>About</h5>\n        <p style={{ textAlign: 'center', marginBottom: '20px' }}>\n          <Highlight>NFTs.REN</Highlight> is a community project that rewards\n          darknode operators with NFTs. At the end of each epoch, operators can\n          claim an NFT for each of their registered nodes, limited to 6 per\n          operator per epoch.\n          <br />\n          <br />\n          NFTs.REN has been deployed on Ethereum and then bridged to Polygon\n          (MATIC) to avoid high claiming costs. Bridging back to Ethereum will\n          be provided soon.\n          <br />\n          <br />\n          Darknode operators have been airdropped 0.05 MATIC to cover claiming\n          fees.\n        </p>\n      </div>\n    </Modal>\n  )\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { transparentize } from \"polished\";\nimport Navbar from \"react-bootstrap/esm/Navbar\";\nimport Nav from \"react-bootstrap/esm/Nav\";\nimport { useEthers } from \"@usedapp/core\";\nimport { Link } from \"react-router-dom\";\n\nimport Logo from \"../img/ren.svg\";\nimport { useLocation } from \"react-router-dom\";\nimport { UseModal } from \"./ModalView\";\nimport { NetworkModal } from \"../modals/NetworkModal\";\nimport { AccountModal } from \"../modals/AccountModal\";\nimport { Web3Modal } from \"../modals/Web3Modal\";\nimport { AboutModal } from \"../modals/AboutModal\";\n\nconst HeaderWrapper = styled.div`\n  position: fixed;\n  width: 100%;\n  z-index: 1;\n\n  padding: 0 0px;\n\n  button,\n  a {\n    color: #0006 !important;\n    opacity: 1;\n    text-shadow: 0.5px 0.5px ${(props) => props.theme.colors.fg} !important;\n  }\n\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    padding: 0;\n  }\n\n  img {\n    width: 100px;\n\n    @media (max-width: ${(props) => props.theme.grid.maxLg}) {\n      width: 80px;\n    }\n    @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n      width: 60px;\n    }\n  }\n\n  a {\n    padding: 10px !important;\n\n    @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n      padding: 5px !important;\n    }\n\n    & + a {\n      margin-left: 20px;\n    }\n\n    text-transform: uppercase;\n    text-align: center;\n    line-height: 1.2em;\n    font-size: 1em;\n\n    &.highlighted {\n      border: 1px solid ${(props) => props.theme.colors.highlight};\n    }\n  }\n`;\n\nconst NavLink: React.FC<{ path: string; title: string }> = ({\n  path,\n  title,\n}) => {\n  const location = useLocation();\n\n  return (\n    <Nav.Link\n      className={location.pathname === path ? \"active\" : \"\"}\n      href={path}\n    >\n      {title}\n    </Nav.Link>\n  );\n};\n\nconst Header = () => {\n  const location = useLocation();\n  const { activateBrowserWallet, account, chainId, error } = useEthers();\n  const { setModal, clearModal } = UseModal.useContainer();\n\n  const [shownWrongNetwork, setShownWrongNetwork] = useState(true);\n  const clearNetworkModal = useCallback(() => {\n    clearModal();\n    setShownWrongNetwork(false);\n  }, [clearModal, setShownWrongNetwork]);\n\n  const connectCallback = useCallback(() => {\n    setShownWrongNetwork(false);\n    setModal(<Web3Modal hideModal={clearModal} />);\n    // activateBrowserWallet()\n  }, [setShownWrongNetwork]);\n\n  useEffect(() => {\n    if (\n      error &&\n      error.message.match(/Unsupported chain id/) &&\n      !shownWrongNetwork\n    ) {\n      setShownWrongNetwork(true);\n      setModal(\n        <NetworkModal\n          showWeb3Modal={connectCallback}\n          hideModal={clearNetworkModal}\n        />\n      );\n    }\n  }, [error, shownWrongNetwork, setShownWrongNetwork, setModal]);\n\n  const showAccountModal = useCallback(() => {\n    setModal(<AccountModal hideModal={clearModal} />);\n  }, [setModal, clearModal]);\n\n  const showAboutModal = useCallback(() => {\n    setModal(<AboutModal hideModal={clearModal} />);\n  }, [setModal, clearModal]);\n\n  // const [showingWallets, setShowingWallets] = useState(false)\n  // const showWallets = useCallback(() => setShowingWallets(true), [\n  //   setShowingWallets,\n  // ])\n  // const hideWallets = useCallback(() => setShowingWallets(false), [\n  //   setShowingWallets,\n  // ])\n\n  return (\n    <>\n      {/* {showingWallets ? <Web3Modal hideWallets={hideWallets} /> : null} */}\n      <HeaderWrapper>\n        <Navbar expand=\"lg\" className=\"justify-content-between\">\n          <Link to=\"/\">\n            <Navbar.Brand>\n              <img src={Logo} />\n            </Navbar.Brand>\n          </Link>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse\n            id=\"basic-navbar-nav\"\n            className=\"justify-content-end\"\n          >\n            <Nav className=\"justify-content-end\">\n              {/* <Nav.Link className={location.pathname} href=\"#community\">\n                FAQ\n              </Nav.Link> */}\n              <a style={{ cursor: \"pointer\" }}>\n                <Nav.Item\n                  onClick={showAboutModal}\n                  className={location.pathname}\n                >\n                  About\n                </Nav.Item>\n              </a>\n              <Link to=\"/collection\">\n                <Nav.Item className={location.pathname}>Collection</Nav.Item>\n              </Link>\n              {account ? (\n                <Nav.Link className=\"highlighted\" onClick={showAccountModal}>\n                  {account.slice(0, 8)}\n                </Nav.Link>\n              ) : (\n                <Nav.Link onClick={connectCallback} className=\"highlighted\">\n                  Connect Wallet\n                </Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </HeaderWrapper>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport PreviewContainer from \"../hooks/usePreviewContainer\";\n\nconst PreviewDiv = styled.div`\n  z-index: 100;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  video,\n  img,\n  figure {\n    /* height: 100%; */\n  }\n\n  .render-artwork,\n  figure > div > img {\n    width: auto;\n    height: 100%;\n    max-height: 100%;\n    max-width: 100%;\n    object-fit: cover;\n\n    max-height: 90vh;\n    max-width: 90vw;\n    height: 100%;\n  }\n`;\n\nconst Overlay = styled.div`\n  z-index: 99 !important;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background: #00000099;\n  cursor: pointer;\n`;\n\nconst X = styled.button`\n  background: none;\n  border: 1px solid ${(props) => props.theme.colors.fg};\n  color: ${(props) => props.theme.colors.fg};\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  visibility: hidden;\n`;\n\nconst PreviewInner = styled.div`\n  z-index: 101;\n  position: relative;\n  max-height: 90vh;\n  max-width: 90vw;\n  height: 100%;\n  width: auto;\n  object-fit: cover;\n\n  &:hover {\n    button {\n      visibility: visible !important;\n    }\n  }\n`;\n\nconst Preview = () => {\n  const { image, setImage } = PreviewContainer.useContainer();\n\n  const clear = useCallback(() => {\n    setImage(null);\n  }, [setImage]);\n\n  const onClick = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation();\n      clear();\n    },\n    [setImage]\n  );\n\n  if (image) {\n    return (\n      <PreviewDiv>\n        <Overlay onClick={clear} />\n        <PreviewInner>\n          <X onClick={onClick}>✖</X>\n          {image}\n        </PreviewInner>\n      </PreviewDiv>\n    );\n  }\n\n  return null;\n};\n\nexport default Preview;\n","import React, { useCallback, useMemo, useState } from \"react\";\n\nimport { useEthers } from \"@usedapp/core\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { TransactionModal } from \"./TransactionModal\";\nimport { NFT, Epoch } from \"../types/NFT\";\nimport { useContractFunction } from \"../hooks/useContractFunction\";\nimport { useNFTPolygonContract } from \"../hooks/useContract\";\nimport Card from \"../stateless/Card\";\nimport styled from \"styled-components\";\n\nconst Input = styled.input`\n  border: 1px solid ${(props) => props.theme.colors.highlight};\n  width: 100%;\n  margin-bottom: 10px;\n`;\n\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\n\ninterface TransferModalProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  > {\n  epoch: Epoch;\n  nft: NFT;\n  epochSeriesIndex: number;\n\n  hideModal: () => void;\n}\n\nconst isENS = (address: string | undefined): boolean => {\n  return !!(\n    address &&\n    address.length > 4 &&\n    address.toLowerCase().slice(-4) === \".eth\"\n  );\n};\n\nexport const TransferModal: React.FC<TransferModalProps> = ({\n  nft,\n  hideModal,\n  ...props\n}) => {\n  const { chainId, account } = useEthers();\n  const nftContract = useNFTPolygonContract(chainId)!;\n\n  const [recipient, setRecipient] = useState(\"\");\n  const recipientIsValid = useMemo(\n    () => isENS(recipient) || isAddress(recipient),\n    [recipient]\n  );\n  const onChange = useCallback(\n    (e) => {\n      setRecipient(e.target.value || \"\");\n    },\n    [setRecipient]\n  );\n\n  const { send, state } = useContractFunction(nftContract, \"safeTransferFrom\");\n\n  const [submitting, setSubmitting] = useState(false);\n  const submitCallback = useCallback(async () => {\n    setSubmitting(true);\n    try {\n      await send(\n        `Transfer ${nft.name || \"NFT\"}`,\n        account,\n        recipient,\n        nft.tokenId,\n        1,\n        []\n      );\n      setSubmitting(false);\n    } catch (error) {\n      setSubmitting(false);\n      throw error;\n    }\n  }, [nft, recipient, account, send]);\n\n  const handleKeypress = useCallback(\n    (e) => {\n      if (e.key === \"Enter\") {\n        submitCallback();\n      }\n    },\n    [submitCallback]\n  );\n\n  return (\n    <TransactionModal\n      buttonLabel={`Transfer`}\n      submitCallback={recipientIsValid ? submitCallback : undefined}\n      status={state}\n      submitting={submitting}\n      noLine={true}\n      hideModal={hideModal}\n      style={{\n        padding: 30,\n      }}\n      {...props}\n    >\n      <div\n        style={{\n          width: 400,\n          maxWidth: \"90vw\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Card inModal={true} nft={nft} />\n      </div>\n      <h3 className=\"font-bebas text-left text-black text-3xl mt-c16 break-words\">\n        {`Transfer ${nft.name || \"NFT\"}`}\n      </h3>\n      <Input\n        className=\"bg-white border-black border-2 text-black py-2 px-2 rounded flex-grow-0 mt-c16 w-full\"\n        type=\"text\"\n        value={recipient}\n        onChange={onChange}\n        placeholder=\"Recipient\"\n        onKeyPress={handleKeypress}\n        disabled={submitting}\n      />\n    </TransactionModal>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { Epoch, NFT } from \"../types/NFT\";\nimport { UseContractState } from \"../hooks/useContractState\";\nimport Card from \"../stateless/Card\";\nimport { TransferModal } from \"../modals/TransferModal\";\nimport { UseModal } from \"./ModalView\";\nimport { Spinner } from \"../stateless/Spinner\";\n\nconst CollectionDiv = styled.div`\n  display: flex;\n  flex-flow: column;\n  background: ${(props) => props.theme.colors.bg};\n  color: ${(props) => props.theme.colors.fg};\n  min-height: 100vh;\n\n  padding-left: 180px;\n  padding-right: 180px;\n\n  @media (max-width: ${(props) => props.theme.grid.maxXl}) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n\n  @media (max-width: ${(props) => props.theme.grid.maxLg}) {\n    padding-left: 80px;\n    padding-right: 80px;\n  }\n\n  @media (max-width: ${(props) => props.theme.grid.maxMd}) {\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  padding-top: 100px;\n\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    padding-top: 40px;\n  }\n`;\nconst Cards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst RenderFullPageInner = ({\n  next,\n  previous,\n}: {\n  next: (() => void) | undefined;\n  previous: (() => void) | undefined;\n}) => {\n  const { account, epochDetails, loading } = UseContractState.useContainer();\n  const { setModal, clearModal } = UseModal.useContainer();\n\n  const showTransferModal = useCallback(\n    (params: { epoch: Epoch; nft: NFT; epochSeriesIndex: number }) => {\n      setModal(\n        <TransferModal\n          epoch={params.epoch}\n          nft={params.nft}\n          epochSeriesIndex={params.epochSeriesIndex}\n          hideModal={clearModal}\n        />\n      );\n    },\n    [setModal]\n  );\n\n  const hasACard = useMemo(() => {\n    return epochDetails.reduce((hasAny, epoch) => {\n      if (hasAny) {\n        return true;\n      }\n      return !!epoch.nfts.reduce(\n        (acc, nft) => acc || (nft.owned ? nft.owned > 0 : false),\n        false\n      );\n    }, false);\n  }, [epochDetails]);\n\n  return (\n    <CollectionDiv>\n      <h2 style={{ marginBottom: 30 }}>Your Collection</h2>\n      <Cards>\n        {!account ? (\n          <p>Log in to see your collection.</p>\n        ) : loading ? (\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              flexFlow: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Spinner white={true} size=\"120px\" />\n          </div>\n        ) : !hasACard ? (\n          <>No NFTs.</>\n        ) : (\n          epochDetails\n            .reverse()\n            .map((epoch, i) => {\n              const epochCards = epoch.nfts.map((nft, epochSeriesIndex) => {\n                const ret = [];\n                for (let i = 0; i < (nft.owned || 0); i++) {\n                  const onClick = () => {\n                    showTransferModal({\n                      epoch: { ...epoch },\n                      nft,\n                      epochSeriesIndex,\n                    });\n                  };\n                  ret.push(<Card small={true} onClick={onClick} nft={nft} />);\n                }\n                return ret;\n              });\n\n              const hasCards = epochCards.reduce(\n                (any, x) => any || x.length > 0,\n                false\n              );\n              if (!hasCards) {\n                return;\n              }\n\n              return (\n                <div\n                  style={{\n                    width: \"100%\",\n                    marginBottom: \"50px\",\n                  }}\n                >\n                  <h4 style={{ marginBottom: 10 }}>Epoch {epoch.id}</h4>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexWrap: \"wrap\",\n                      justifyContent: \"flex-start\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    {epochCards}\n                  </div>\n                </div>\n              );\n            })\n            .valueSeq()\n            .toArray()\n        )}\n      </Cards>\n    </CollectionDiv>\n  );\n};\n\nexport const Collection = () => {\n  return <RenderFullPageInner next={undefined} previous={undefined} />;\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { Epoch, MediaType, NFT } from \"../types/NFT\";\nimport { UseContractState } from \"../hooks/useContractState\";\nimport Card, { RenderArtwork } from \"../stateless/Card\";\nimport { TransferModal } from \"../modals/TransferModal\";\nimport { UseModal } from \"./ModalView\";\nimport PreviewContainer from \"../hooks/usePreviewContainer\";\n\nconst CollectionDiv = styled.div`\n  display: flex;\n  flex-flow: column;\n  background: ${(props) => props.theme.colors.bg};\n  color: ${(props) => props.theme.colors.fg};\n  min-height: 100vh;\n\n  padding-left: 180px;\n  padding-right: 180px;\n\n  @media (max-width: ${(props) => props.theme.grid.maxXl}) {\n    padding-left: 100px;\n    padding-right: 100px;\n  }\n\n  @media (max-width: ${(props) => props.theme.grid.maxLg}) {\n    padding-left: 80px;\n    padding-right: 80px;\n  }\n\n  @media (max-width: ${(props) => props.theme.grid.maxMd}) {\n    padding-left: 30px;\n    padding-right: 30px;\n  }\n\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n\n  padding-top: 100px;\n\n  @media (max-width: ${(props) => props.theme.grid.maxSm}) {\n    padding-top: 40px;\n  }\n`;\nconst Cards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst RenderFullPageInner = ({\n  next,\n  previous,\n}: {\n  next: (() => void) | undefined;\n  previous: (() => void) | undefined;\n}) => {\n  const { account, epochDetails, loading } = UseContractState.useContainer();\n  const { setModal, clearModal } = UseModal.useContainer();\n\n  const showTransferModal = useCallback(\n    (params: { epoch: Epoch; nft: NFT; epochSeriesIndex: number }) => {\n      setModal(\n        <TransferModal\n          epoch={params.epoch}\n          nft={params.nft}\n          epochSeriesIndex={params.epochSeriesIndex}\n          hideModal={clearModal}\n        />\n      );\n    },\n    [setModal]\n  );\n\n  const hasACard = useMemo(() => {\n    return epochDetails.reduce((hasAny, epoch) => {\n      if (hasAny) {\n        return true;\n      }\n      return !!epoch.nfts.reduce(\n        (acc, nft) => acc || (nft.owned ? nft.owned > 0 : false),\n        false\n      );\n    }, false);\n  }, [epochDetails]);\n\n  const image = (image: string): NFT => ({\n    name: \"\",\n    url: image,\n    mediaType: MediaType.Image,\n    count: 0,\n  });\n\n  const { setImage } = PreviewContainer.useContainer();\n\n  const images = [\n    [\n      image(\"/images/16/1/media.jpg\"),\n      image(\"/images/16/1/media-2.jpg\"),\n      image(\"/images/16/1/media-3.jpg\"),\n    ],\n\n    [\n      image(\"/images/16/2/media.jpg\"),\n      image(\"/images/16/2/media-2.jpg\"),\n      image(\"/images/16/2/media-3.jpg\"),\n      image(\"/images/16/2/media-4.jpg\"),\n    ],\n\n    [\n      image(\"/images/16/3/media.jpg\"),\n      image(\"/images/16/3/media-2.jpg\"),\n      image(\"/images/16/3/media-3.jpg\"),\n    ],\n  ];\n\n  const epochCards = images.map((edition, i) => {\n    const editionCards = edition.map((nft) => {\n      const onClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        // setShowAsModal((current) => !current)\n        setImage(<RenderArtwork nft={nft} preview={true} />);\n      };\n      return <Card onClick={onClick} nft={nft} />;\n    });\n\n    return (\n      <div>\n        <h4 style={{ marginBottom: 10, marginTop: 20 }}>#{i + 1}</h4>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"flex-start\",\n            alignItems: \"center\",\n          }}\n        >\n          {editionCards}\n        </div>\n      </div>\n    );\n  });\n\n  console.log(epochCards);\n\n  return (\n    <CollectionDiv>\n      <Cards>\n        <div\n          style={{\n            width: \"100%\",\n            marginBottom: \"50px\",\n          }}\n        >\n          <h2 style={{ marginBottom: 40 }}>Epoch 16</h2>\n          {epochCards}\n        </div>\n      </Cards>\n    </CollectionDiv>\n  );\n};\n\nexport const Full16 = () => {\n  return <RenderFullPageInner next={undefined} previous={undefined} />;\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { Fullpage } from \"./stateful/Fullpage\";\nimport styled from \"styled-components\";\nimport Header from \"./stateful/Header\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Preview from \"./stateful/Preview\";\nimport { ModalView } from \"./stateful/ModalView\";\nimport { Collection } from \"./stateful/Collection\";\nimport { Full16 } from \"./stateful/Full16\";\n\nconst AppWrapper = styled.div``;\n\ninterface AppProps {}\n\nfunction App({}: AppProps) {\n  return (\n    <AppWrapper>\n      <Header />\n      <ModalView />\n\n      <Switch>\n        <Route exact path=\"/collection/\">\n          <Preview />\n          <Collection />\n        </Route>\n        <Route exact path=\"/details/16\">\n          <Preview />\n          <Full16 />\n        </Route>\n        <Route exact path=\"/:page?\">\n          <Preview />\n          <Fullpage />\n        </Route>\n        <Route>404</Route>\n      </Switch>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","export const minSm = 544\nexport const minMd = 768\nexport const minLg = 992\nexport const minXl = 1240\nexport const minXxl = 1440\nexport const maxXs = minSm - 1\nexport const maxSm = minMd - 1\nexport const maxMd = minLg - 1\nexport const maxLg = minXl - 1\nexport const maxXl = minXxl - 1\n\nexport const theme = {\n  colors: {\n    highlight: '#DCB84C',\n    // fg: '#000000',\n    // bg: '#FEF9F9',\n\n    bg: '#000000',\n    fg: '#FEF9F9',\n  },\n\n  grid: {\n    minSm: `${minSm}px`,\n    minMd: `${minMd}px`,\n    minLg: `${minLg}px`,\n    minXl: `${minXl}px`,\n    minXxl: `${minXxl}px`,\n    maxXs: `${maxXs}px`,\n    maxSm: `${maxSm}px`,\n    maxMd: `${maxMd}px`,\n    maxLg: `${maxLg}px`,\n    maxXl: `${maxXl}px`,\n  },\n}\n\nexport type ThemeType = typeof theme\n","import { createBrowserHistory } from 'history'\n\nexport const history = createBrowserHistory()\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport { theme } from \"./theme\";\nimport PreviewContainer from \"./hooks/usePreviewContainer\";\nimport { ToastContainer } from \"react-toastify\";\nimport { DAppProvider } from \"@usedapp/core\";\nimport { UseContractState } from \"./hooks/useContractState\";\nimport { dappConfig } from \"./hooks/config\";\nimport { Router as Router } from \"react-router-dom\";\nimport { UseModal } from \"./stateful/ModalView\";\nimport { history } from \"./hooks/createHistory\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"video-react/dist/video-react.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-inner-image-zoom/lib/InnerImageZoom/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UseModal.Provider>\n      <DAppProvider config={dappConfig}>\n        <ThemeProvider theme={theme}>\n          <Router history={history}>\n            <ToastContainer />\n            <UseContractState.Provider>\n              <PreviewContainer.Provider>\n                <App />\n              </PreviewContainer.Provider>\n            </UseContractState.Provider>\n          </Router>\n        </ThemeProvider>\n      </DAppProvider>\n    </UseModal.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// Hot Module Replacement (HMR) - Remove this snippet to remove HMR.\n// Learn more: https://snowpack.dev/concepts/hot-module-replacement\n// if (import.meta.hot) {\n//   // @ts-expect-error\n//   import.meta.hot.accept()\n// }\n"],"sourceRoot":""}