import { c as createCommonjsModule, a as commonjsGlobal } from '../common/_commonjsHelpers-c99fd594.js';
import { l as lib_esm$2 } from '../common/index-e4af23f7.js';
import { B as BigNumber, _ as _base16To36, l as _base36To16, a as arrayify, k as keccak256 } from '../common/index-e1fc64bd.js';
import { f as formatFixed, F as FixedFormat, a as FixedNumber, p as parseFixed, W as Wallet, E as ErrorCode } from '../common/index-9b62575f.js';
import { r as react } from '../common/index-d5182917.js';
import { i as invariant } from '../common/tiny-invariant.esm-50c76060.js';
import { C as ConnectorEvent, A as AbstractConnector } from '../common/abstract-connector.esm-770296ad.js';
import { w as warning, i as injectedConnector_esm } from '../common/injected-connector.esm-c12c3876.js';
import { l as lib_esm$3, C as Contract, a as ContractFactory } from '../common/index-b7dc823d.js';
import { l as lib_esm$4, e as ethers, S as Signer, V as VoidSigner, g as getDefaultProvider, B as BigNumber$1, F as FixedNumber$1, i as index, a as logger, u as utils, w as wordlists, v as version, W as Wordlist } from '../common/ethers-d00e90af.js';
import '../common/id-606cacc0.js';
import '../common/bn-d1fd1360.js';
import '../common/process-e9e98960.js';
import '../common/index-93707a3a.js';
import '../common/hash-fcae10d4.js';
import '../common/polyfill-node:global-21e5c503.js';
import '../common/polyfill-node:events-0f2be4c8.js';
import '../common/addresses-6e73bc13.js';

var lib_esm = /*#__PURE__*/Object.freeze({
    __proto__: null,
    BigNumber: BigNumber,
    formatFixed: formatFixed,
    FixedFormat: FixedFormat,
    FixedNumber: FixedNumber,
    parseFixed: parseFixed,
    _base16To36: _base16To36,
    _base36To16: _base36To16
});

const abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes"
          }
        ],
        internalType: "struct Multicall.Call[]",
        name: "calls",
        type: "tuple[]"
      }
    ],
    name: "aggregate",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256"
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256"
      }
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
    ],
    name: "getCurrentBlockCoinbase",
    outputs: [
      {
        internalType: "address",
        name: "coinbase",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
    ],
    name: "getCurrentBlockDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "difficulty",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
    ],
    name: "getCurrentBlockGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "gaslimit",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
    ],
    name: "getCurrentBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address"
      }
    ],
    name: "getEthBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
    ],
    name: "getLastBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];
const bytecode = "608060405234801561001057600080fd5b5061066e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e757806386d516e8146100ef578063a8b0574e146100f7578063ee82ac5e1461010c57610088565b80630f28c97d1461008d578063252dba42146100ab57806327e86d6e146100cc5780634d2301cc146100d4575b600080fd5b61009561011f565b6040516100a2919061051e565b60405180910390f35b6100be6100b93660046103b6565b610123565b6040516100a292919061052c565b610095610231565b6100956100e2366004610390565b61023a565b610095610247565b61009561024b565b6100ff61024f565b6040516100a2919061050a565b61009561011a3660046103eb565b610253565b4290565b60006060439150825160405190808252806020026020018201604052801561015f57816020015b606081526020019060019003908161014a5790505b50905060005b835181101561022b576000606085838151811061017e57fe5b6020026020010151600001516001600160a01b031686848151811061019f57fe5b6020026020010151602001516040516101b891906104fe565b6000604051808303816000865af19150503d80600081146101f5576040519150601f19603f3d011682016040523d82523d6000602084013e6101fa565b606091505b50915091508161020957600080fd5b8084848151811061021657fe5b60209081029190910101525050600101610165565b50915091565b60001943014090565b6001600160a01b03163190565b4490565b4590565b4190565b4090565b600061026382356105d4565b9392505050565b600082601f83011261027b57600080fd5b813561028e61028982610573565b61054c565b81815260209384019390925082018360005b838110156102cc57813586016102b68882610325565b84525060209283019291909101906001016102a0565b5050505092915050565b600082601f8301126102e757600080fd5b81356102f561028982610594565b9150808252602083016020830185838301111561031157600080fd5b61031c8382846105ee565b50505092915050565b60006040828403121561033757600080fd5b610341604061054c565b9050600061034f8484610257565b825250602082013567ffffffffffffffff81111561036c57600080fd5b610378848285016102d6565b60208301525092915050565b600061026382356105df565b6000602082840312156103a257600080fd5b60006103ae8484610257565b949350505050565b6000602082840312156103c857600080fd5b813567ffffffffffffffff8111156103df57600080fd5b6103ae8482850161026a565b6000602082840312156103fd57600080fd5b60006103ae8484610384565b60006102638383610497565b61041e816105d4565b82525050565b600061042f826105c2565b61043981856105c6565b93508360208202850161044b856105bc565b60005b84811015610482578383038852610466838351610409565b9250610471826105bc565b60209890980197915060010161044e565b50909695505050505050565b61041e816105df565b60006104a2826105c2565b6104ac81856105c6565b93506104bc8185602086016105fa565b6104c58161062a565b9093019392505050565b60006104da826105c2565b6104e481856105cf565b93506104f48185602086016105fa565b9290920192915050565b600061026382846104cf565b602081016105188284610415565b92915050565b60208101610518828461048e565b6040810161053a828561048e565b81810360208301526103ae8184610424565b60405181810167ffffffffffffffff8111828210171561056b57600080fd5b604052919050565b600067ffffffffffffffff82111561058a57600080fd5b5060209081020190565b600067ffffffffffffffff8211156105ab57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b6000610518826105e2565b90565b6001600160a01b031690565b82818337506000910152565b60005b838110156106155781810151838201526020016105fd565b83811115610624576000848401525b50505050565b601f01601f19169056fea265627a7a72305820978cd44d5ce226bebdf172bdf24918753b9e111e3803cb6249d3ca2860b7a47f6c6578706572696d656e74616cf50037";
var require$$0 = {
  abi: abi,
  bytecode: bytecode
};

const contractName = "ERC20";
const abi$1 = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    constant: true,
    inputs: [
    ],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address"
      },
      {
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address"
      },
      {
        name: "value",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address"
      },
      {
        name: "value",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address"
      },
      {
        name: "to",
        type: "address"
      },
      {
        name: "value",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address"
      },
      {
        name: "addedValue",
        type: "uint256"
      }
    ],
    name: "increaseAllowance",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "spender",
        type: "address"
      },
      {
        name: "subtractedValue",
        type: "uint256"
      }
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];
const bytecode$1 = "0x608060405234801561001057600080fd5b506105dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161007857806370a0823114610166578063a457c2d71461018c578063a9059cbb146101b8578063dd62ed3e146101e4576100a5565b8063095ea7b3146100aa57806318160ddd146100ea57806323b872dd14610104578063395093511461013a575b600080fd5b6100d6600480360360408110156100c057600080fd5b50600160a060020a038135169060200135610212565b604080519115158252519081900360200190f35b6100f2610290565b60408051918252519081900360200190f35b6100d66004803603606081101561011a57600080fd5b50600160a060020a03813581169160208101359091169060400135610296565b6100d66004803603604081101561015057600080fd5b50600160a060020a03813516906020013561035f565b6100f26004803603602081101561017c57600080fd5b5035600160a060020a031661040f565b6100d6600480360360408110156101a257600080fd5b50600160a060020a03813516906020013561042a565b6100d6600480360360408110156101ce57600080fd5b50600160a060020a038135169060200135610475565b6100f2600480360360408110156101fa57600080fd5b50600160a060020a038135811691602001351661048b565b6000600160a060020a038316151561022957600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120546102ca908363ffffffff6104b616565b600160a060020a03851660009081526001602090815260408083203384529091529020556102f98484846104cb565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a038316151561037657600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546103aa908363ffffffff61059816565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b6000600160a060020a038316151561044157600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546103aa908363ffffffff6104b616565b60006104823384846104cb565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156104c557600080fd5b50900390565b600160a060020a03821615156104e057600080fd5b600160a060020a038316600090815260208190526040902054610509908263ffffffff6104b616565b600160a060020a03808516600090815260208190526040808220939093559084168152205461053e908263ffffffff61059816565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156105aa57600080fd5b939250505056fea165627a7a72305820722c0187518ce2856a424bdba350d5a263c8f98fcb19cb4cc161372bc3b794c90029";
const deployedBytecode = "0x608060405234801561001057600080fd5b50600436106100a5576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161007857806370a0823114610166578063a457c2d71461018c578063a9059cbb146101b8578063dd62ed3e146101e4576100a5565b8063095ea7b3146100aa57806318160ddd146100ea57806323b872dd14610104578063395093511461013a575b600080fd5b6100d6600480360360408110156100c057600080fd5b50600160a060020a038135169060200135610212565b604080519115158252519081900360200190f35b6100f2610290565b60408051918252519081900360200190f35b6100d66004803603606081101561011a57600080fd5b50600160a060020a03813581169160208101359091169060400135610296565b6100d66004803603604081101561015057600080fd5b50600160a060020a03813516906020013561035f565b6100f26004803603602081101561017c57600080fd5b5035600160a060020a031661040f565b6100d6600480360360408110156101a257600080fd5b50600160a060020a03813516906020013561042a565b6100d6600480360360408110156101ce57600080fd5b50600160a060020a038135169060200135610475565b6100f2600480360360408110156101fa57600080fd5b50600160a060020a038135811691602001351661048b565b6000600160a060020a038316151561022957600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120546102ca908363ffffffff6104b616565b600160a060020a03851660009081526001602090815260408083203384529091529020556102f98484846104cb565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a038316151561037657600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546103aa908363ffffffff61059816565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a031660009081526020819052604090205490565b6000600160a060020a038316151561044157600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546103aa908363ffffffff6104b616565b60006104823384846104cb565b50600192915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156104c557600080fd5b50900390565b600160a060020a03821615156104e057600080fd5b600160a060020a038316600090815260208190526040902054610509908263ffffffff6104b616565b600160a060020a03808516600090815260208190526040808220939093559084168152205461053e908263ffffffff61059816565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000828201838110156105aa57600080fd5b939250505056fea165627a7a72305820722c0187518ce2856a424bdba350d5a263c8f98fcb19cb4cc161372bc3b794c90029";
const compiler = {
  name: "solc",
  version: "0.5.4+commit.9549d8ff.Emscripten.clang"
};
var require$$1 = {
  contractName: contractName,
  abi: abi$1,
  bytecode: bytecode$1,
  deployedBytecode: deployedBytecode,
  compiler: compiler
};

const _format = "hh-sol-artifact-1";
const contractName$1 = "ERC20Mock";
const sourceName = "contracts/mocks/ERC20Mock.sol";
const abi$2 = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string"
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string"
      },
      {
        internalType: "address",
        name: "initialAccount",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256"
      }
    ],
    stateMutability: "payable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "approveInternal",
    outputs: [
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "burn",
    outputs: [
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
    ],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256"
      }
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256"
      }
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "mint",
    outputs: [
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address"
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "transferInternal",
    outputs: [
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
];
const bytecode$2 = "0x608060405260405162001fc138038062001fc1833981810160405281019062000029919062000335565b8383816003908051906020019062000043929190620001e5565b5080600490805190602001906200005c929190620001e5565b5050506200007182826200007b60201b60201c565b50505050620006a5565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e59062000426565b60405180910390fd5b6200010260008383620001e060201b60201c565b8060026000828254620001169190620004dd565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200016d9190620004dd565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001d4919062000448565b60405180910390a35050565b505050565b828054620001f390620005ae565b90600052602060002090601f01602090048101928262000217576000855562000263565b82601f106200023257805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026257825182559160200191906001019062000245565b5b50905062000272919062000276565b5090565b5b808211156200029157600081600090555060010162000277565b5090565b6000620002ac620002a68462000499565b62000465565b905082815260208101848484011115620002c557600080fd5b620002d284828562000578565b509392505050565b600081519050620002eb8162000671565b92915050565b600082601f8301126200030357600080fd5b81516200031584826020860162000295565b91505092915050565b6000815190506200032f816200068b565b92915050565b600080600080608085870312156200034c57600080fd5b600085015167ffffffffffffffff8111156200036757600080fd5b6200037587828801620002f1565b945050602085015167ffffffffffffffff8111156200039357600080fd5b620003a187828801620002f1565b9350506040620003b487828801620002da565b9250506060620003c7878288016200031e565b91505092959194509250565b6000620003e2601f83620004cc565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b62000420816200056e565b82525050565b600060208201905081810360008301526200044181620003d3565b9050919050565b60006020820190506200045f600083018462000415565b92915050565b6000604051905081810181811067ffffffffffffffff821117156200048f576200048e62000642565b5b8060405250919050565b600067ffffffffffffffff821115620004b757620004b662000642565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000620004ea826200056e565b9150620004f7836200056e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200052f576200052e620005e4565b5b828201905092915050565b600062000547826200054e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620005985780820151818401526020810190506200057b565b83811115620005a8576000848401525b50505050565b60006002820490506001821680620005c757607f821691505b60208210811415620005de57620005dd62000613565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200067c816200053a565b81146200068857600080fd5b50565b62000696816200056e565b8114620006a257600080fd5b50565b61190c80620006b56000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac14610286578063a457c2d7146102a2578063a9059cbb146102d2578063dd62ed3e14610302576100f5565b806340c10f191461020057806356189cb41461021c57806370a082311461023857806395d89b4114610268576100f5565b8063222f5be0116100d3578063222f5be01461016657806323b872dd14610182578063313ce567146101b257806339509351146101d0576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610332565b60405161010f9190611541565b60405180910390f35b610132600480360381019061012d91906110ae565b6103c4565b60405161013f9190611526565b60405180910390f35b6101506103e2565b60405161015d91906116a3565b60405180910390f35b610180600480360381019061017b919061105f565b6103ec565b005b61019c6004803603810190610197919061105f565b6103fc565b6040516101a99190611526565b60405180910390f35b6101ba6104fd565b6040516101c791906116be565b60405180910390f35b6101ea60048036038101906101e591906110ae565b610506565b6040516101f79190611526565b60405180910390f35b61021a600480360381019061021591906110ae565b6105b2565b005b6102366004803603810190610231919061105f565b6105c0565b005b610252600480360381019061024d9190610ffa565b6105d0565b60405161025f91906116a3565b60405180910390f35b610270610618565b60405161027d9190611541565b60405180910390f35b6102a0600480360381019061029b91906110ae565b6106aa565b005b6102bc60048036038101906102b791906110ae565b6106b8565b6040516102c99190611526565b60405180910390f35b6102ec60048036038101906102e791906110ae565b6107ac565b6040516102f99190611526565b60405180910390f35b61031c60048036038101906103179190611023565b6107ca565b60405161032991906116a3565b60405180910390f35b60606003805461034190611807565b80601f016020809104026020016040519081016040528092919081815260200182805461036d90611807565b80156103ba5780601f1061038f576101008083540402835291602001916103ba565b820191906000526020600020905b81548152906001019060200180831161039d57829003601f168201915b5050505050905090565b60006103d86103d1610851565b8484610859565b6001905092915050565b6000600254905090565b6103f7838383610a24565b505050565b6000610409848484610a24565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610454610851565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cb906115e3565b60405180910390fd5b6104f1856104e0610851565b85846104ec919061174b565b610859565b60019150509392505050565b60006012905090565b60006105a8610513610851565b848460016000610521610851565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105a391906116f5565b610859565b6001905092915050565b6105bc8282610ca3565b5050565b6105cb838383610859565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461062790611807565b80601f016020809104026020016040519081016040528092919081815260200182805461065390611807565b80156106a05780601f10610675576101008083540402835291602001916106a0565b820191906000526020600020905b81548152906001019060200180831161068357829003601f168201915b5050505050905090565b6106b48282610df7565b5050565b600080600160006106c7610851565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077b90611663565b60405180910390fd5b6107a161078f610851565b85858461079c919061174b565b610859565b600191505092915050565b60006107c06107b9610851565b8484610a24565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c090611643565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610939576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610930906115a3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a1791906116a3565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90611623565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afb90611563565b60405180910390fd5b610b0f838383610fcb565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8c906115c3565b60405180910390fd5b8181610ba1919061174b565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c3191906116f5565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c9591906116a3565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0a90611683565b60405180910390fd5b610d1f60008383610fcb565b8060026000828254610d3191906116f5565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d8691906116f5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610deb91906116a3565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5e90611603565b60405180910390fd5b610e7382600083610fcb565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef090611583565b60405180910390fd5b8181610f05919061174b565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610f59919061174b565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fbe91906116a3565b60405180910390a3505050565b505050565b600081359050610fdf816118a8565b92915050565b600081359050610ff4816118bf565b92915050565b60006020828403121561100c57600080fd5b600061101a84828501610fd0565b91505092915050565b6000806040838503121561103657600080fd5b600061104485828601610fd0565b925050602061105585828601610fd0565b9150509250929050565b60008060006060848603121561107457600080fd5b600061108286828701610fd0565b935050602061109386828701610fd0565b92505060406110a486828701610fe5565b9150509250925092565b600080604083850312156110c157600080fd5b60006110cf85828601610fd0565b92505060206110e085828601610fe5565b9150509250929050565b6110f381611791565b82525050565b6000611104826116d9565b61110e81856116e4565b935061111e8185602086016117d4565b61112781611897565b840191505092915050565b600061113f6023836116e4565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111a56022836116e4565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061120b6022836116e4565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112716026836116e4565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112d76028836116e4565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061133d6021836116e4565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006113a36025836116e4565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114096024836116e4565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061146f6025836116e4565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114d5601f836116e4565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b611511816117bd565b82525050565b611520816117c7565b82525050565b600060208201905061153b60008301846110ea565b92915050565b6000602082019050818103600083015261155b81846110f9565b905092915050565b6000602082019050818103600083015261157c81611132565b9050919050565b6000602082019050818103600083015261159c81611198565b9050919050565b600060208201905081810360008301526115bc816111fe565b9050919050565b600060208201905081810360008301526115dc81611264565b9050919050565b600060208201905081810360008301526115fc816112ca565b9050919050565b6000602082019050818103600083015261161c81611330565b9050919050565b6000602082019050818103600083015261163c81611396565b9050919050565b6000602082019050818103600083015261165c816113fc565b9050919050565b6000602082019050818103600083015261167c81611462565b9050919050565b6000602082019050818103600083015261169c816114c8565b9050919050565b60006020820190506116b86000830184611508565b92915050565b60006020820190506116d36000830184611517565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611700826117bd565b915061170b836117bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117405761173f611839565b5b828201905092915050565b6000611756826117bd565b9150611761836117bd565b92508282101561177457611773611839565b5b828203905092915050565b600061178a8261179d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156117f25780820151818401526020810190506117d7565b83811115611801576000848401525b50505050565b6000600282049050600182168061181f57607f821691505b6020821081141561183357611832611868565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6118b18161177f565b81146118bc57600080fd5b50565b6118c8816117bd565b81146118d357600080fd5b5056fea26469706673582212201e41f70221ac8d0f18c73be33898dbdedd64ac077893da38d712d65fe6638d1864736f6c63430008000033";
const deployedBytecode$1 = "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f19116100975780639dc29fac116100665780639dc29fac14610286578063a457c2d7146102a2578063a9059cbb146102d2578063dd62ed3e14610302576100f5565b806340c10f191461020057806356189cb41461021c57806370a082311461023857806395d89b4114610268576100f5565b8063222f5be0116100d3578063222f5be01461016657806323b872dd14610182578063313ce567146101b257806339509351146101d0576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610332565b60405161010f9190611541565b60405180910390f35b610132600480360381019061012d91906110ae565b6103c4565b60405161013f9190611526565b60405180910390f35b6101506103e2565b60405161015d91906116a3565b60405180910390f35b610180600480360381019061017b919061105f565b6103ec565b005b61019c6004803603810190610197919061105f565b6103fc565b6040516101a99190611526565b60405180910390f35b6101ba6104fd565b6040516101c791906116be565b60405180910390f35b6101ea60048036038101906101e591906110ae565b610506565b6040516101f79190611526565b60405180910390f35b61021a600480360381019061021591906110ae565b6105b2565b005b6102366004803603810190610231919061105f565b6105c0565b005b610252600480360381019061024d9190610ffa565b6105d0565b60405161025f91906116a3565b60405180910390f35b610270610618565b60405161027d9190611541565b60405180910390f35b6102a0600480360381019061029b91906110ae565b6106aa565b005b6102bc60048036038101906102b791906110ae565b6106b8565b6040516102c99190611526565b60405180910390f35b6102ec60048036038101906102e791906110ae565b6107ac565b6040516102f99190611526565b60405180910390f35b61031c60048036038101906103179190611023565b6107ca565b60405161032991906116a3565b60405180910390f35b60606003805461034190611807565b80601f016020809104026020016040519081016040528092919081815260200182805461036d90611807565b80156103ba5780601f1061038f576101008083540402835291602001916103ba565b820191906000526020600020905b81548152906001019060200180831161039d57829003601f168201915b5050505050905090565b60006103d86103d1610851565b8484610859565b6001905092915050565b6000600254905090565b6103f7838383610a24565b505050565b6000610409848484610a24565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610454610851565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cb906115e3565b60405180910390fd5b6104f1856104e0610851565b85846104ec919061174b565b610859565b60019150509392505050565b60006012905090565b60006105a8610513610851565b848460016000610521610851565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105a391906116f5565b610859565b6001905092915050565b6105bc8282610ca3565b5050565b6105cb838383610859565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461062790611807565b80601f016020809104026020016040519081016040528092919081815260200182805461065390611807565b80156106a05780601f10610675576101008083540402835291602001916106a0565b820191906000526020600020905b81548152906001019060200180831161068357829003601f168201915b5050505050905090565b6106b48282610df7565b5050565b600080600160006106c7610851565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077b90611663565b60405180910390fd5b6107a161078f610851565b85858461079c919061174b565b610859565b600191505092915050565b60006107c06107b9610851565b8484610a24565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c090611643565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610939576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610930906115a3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a1791906116a3565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8b90611623565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afb90611563565b60405180910390fd5b610b0f838383610fcb565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8c906115c3565b60405180910390fd5b8181610ba1919061174b565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c3191906116f5565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c9591906116a3565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0a90611683565b60405180910390fd5b610d1f60008383610fcb565b8060026000828254610d3191906116f5565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d8691906116f5565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610deb91906116a3565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5e90611603565b60405180910390fd5b610e7382600083610fcb565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef090611583565b60405180910390fd5b8181610f05919061174b565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254610f59919061174b565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fbe91906116a3565b60405180910390a3505050565b505050565b600081359050610fdf816118a8565b92915050565b600081359050610ff4816118bf565b92915050565b60006020828403121561100c57600080fd5b600061101a84828501610fd0565b91505092915050565b6000806040838503121561103657600080fd5b600061104485828601610fd0565b925050602061105585828601610fd0565b9150509250929050565b60008060006060848603121561107457600080fd5b600061108286828701610fd0565b935050602061109386828701610fd0565b92505060406110a486828701610fe5565b9150509250925092565b600080604083850312156110c157600080fd5b60006110cf85828601610fd0565b92505060206110e085828601610fe5565b9150509250929050565b6110f381611791565b82525050565b6000611104826116d9565b61110e81856116e4565b935061111e8185602086016117d4565b61112781611897565b840191505092915050565b600061113f6023836116e4565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111a56022836116e4565b91507f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008301527f63650000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061120b6022836116e4565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112716026836116e4565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006112d76028836116e4565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b600061133d6021836116e4565b91507f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008301527f73000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006113a36025836116e4565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114096024836116e4565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061146f6025836116e4565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114d5601f836116e4565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b611511816117bd565b82525050565b611520816117c7565b82525050565b600060208201905061153b60008301846110ea565b92915050565b6000602082019050818103600083015261155b81846110f9565b905092915050565b6000602082019050818103600083015261157c81611132565b9050919050565b6000602082019050818103600083015261159c81611198565b9050919050565b600060208201905081810360008301526115bc816111fe565b9050919050565b600060208201905081810360008301526115dc81611264565b9050919050565b600060208201905081810360008301526115fc816112ca565b9050919050565b6000602082019050818103600083015261161c81611330565b9050919050565b6000602082019050818103600083015261163c81611396565b9050919050565b6000602082019050818103600083015261165c816113fc565b9050919050565b6000602082019050818103600083015261167c81611462565b9050919050565b6000602082019050818103600083015261169c816114c8565b9050919050565b60006020820190506116b86000830184611508565b92915050565b60006020820190506116d36000830184611517565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611700826117bd565b915061170b836117bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117405761173f611839565b5b828201905092915050565b6000611756826117bd565b9150611761836117bd565b92508282101561177457611773611839565b5b828203905092915050565b600061178a8261179d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156117f25780820151818401526020810190506117d7565b83811115611801576000848401525b50505050565b6000600282049050600182168061181f57607f821691505b6020821081141561183357611832611868565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6118b18161177f565b81146118bc57600080fd5b50565b6118c8816117bd565b81146118d357600080fd5b5056fea26469706673582212201e41f70221ac8d0f18c73be33898dbdedd64ac077893da38d712d65fe6638d1864736f6c63430008000033";
const linkReferences = {
};
const deployedLinkReferences = {
};
var require$$2 = {
  _format: _format,
  contractName: contractName$1,
  sourceName: sourceName,
  abi: abi$2,
  bytecode: bytecode$2,
  deployedBytecode: deployedBytecode$1,
  linkReferences: linkReferences,
  deployedLinkReferences: deployedLinkReferences
};

var abi$3 = createCommonjsModule(function (module, exports) {
var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.ERC20MockInterface = exports.ERC20Mock = exports.ERC20Interface = exports.ERC20 = exports.MultiCallABI = exports.MultiCall = void 0;

var MultiCall_json_1 = __importDefault(require$$0);
exports.MultiCall = MultiCall_json_1["default"];
var ERC20_json_1 = __importDefault(require$$1);
exports.ERC20 = ERC20_json_1["default"];
var ERC20Mock_json_1 = __importDefault(require$$2);
exports.ERC20Mock = ERC20Mock_json_1["default"];
var MultiCallABI = new lib_esm$2.Interface(MultiCall_json_1["default"].abi);
exports.MultiCallABI = MultiCallABI;
var ERC20Interface = new lib_esm$2.Interface(ERC20_json_1["default"].abi);
exports.ERC20Interface = ERC20Interface;
var ERC20MockInterface = new lib_esm$2.Interface(ERC20Mock_json_1["default"].abi);
exports.ERC20MockInterface = ERC20MockInterface;

});

var chainId = createCommonjsModule(function (module, exports) {
var _a, _b;
exports.__esModule = true;
exports.TEST_CHAINS = exports.MULTICALL_ADDRESSES = exports.CHAIN_NAMES = exports.ChainId = void 0;
var ChainId;
(function (ChainId) {
    ChainId[ChainId["Mainnet"] = 1] = "Mainnet";
    ChainId[ChainId["Ropsten"] = 3] = "Ropsten";
    ChainId[ChainId["Rinkeby"] = 4] = "Rinkeby";
    ChainId[ChainId["Goerli"] = 5] = "Goerli";
    ChainId[ChainId["Kovan"] = 42] = "Kovan";
    ChainId[ChainId["xDai"] = 100] = "xDai";
    ChainId[ChainId["Localhost"] = 1337] = "Localhost";
    ChainId[ChainId["Hardhat"] = 31337] = "Hardhat";
})(ChainId = exports.ChainId || (exports.ChainId = {}));
exports.CHAIN_NAMES = (_a = {},
    _a[ChainId.Mainnet] = 'Mainnet',
    _a[ChainId.Ropsten] = 'Ropsten',
    _a[ChainId.Kovan] = 'Kovan',
    _a[ChainId.Rinkeby] = 'Rinkeby',
    _a[ChainId.Goerli] = 'Goerli',
    _a[ChainId.xDai] = 'xDai',
    _a[ChainId.Localhost] = 'Localhost',
    _a[ChainId.Hardhat] = 'Hardhat',
    _a);
exports.MULTICALL_ADDRESSES = (_b = {},
    _b[ChainId.Mainnet] = '0xeefba1e63905ef1d7acba5a8513c70307c1ce441',
    _b[ChainId.Ropsten] = '0x53c43764255c17bd724f74c4ef150724ac50a3ed',
    _b[ChainId.Rinkeby] = '0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821',
    _b[ChainId.Goerli] = '0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e',
    _b[ChainId.Kovan] = '0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a',
    _b[ChainId.xDai] = '0xb5b692a88bdfc81ca69dcb1d924f59f0413a602a',
    _b);
exports.TEST_CHAINS = [
    ChainId.Ropsten,
    ChainId.Kovan,
    ChainId.Rinkeby,
    ChainId.Goerli,
    ChainId.Localhost,
    ChainId.Hardhat,
];

});

var formatting = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.formatCurrency = exports.DEFAULT_OPTIONS = void 0;
exports.DEFAULT_OPTIONS = {
    decimals: 0,
    thousandSeparator: ',',
    decimalSeparator: '.',
    significantDigits: Infinity,
    useFixedPrecision: false,
    fixedPrecisionDigits: 0,
    prefix: '',
    suffix: ''
};
var INPUT_REGEX = /^\d*$/;
function formatCurrency(options, value) {
    if (!INPUT_REGEX.test(value)) {
        throw new TypeError('Invalid input, decimal string expected.');
    }
    var number = formatNumber(options, value);
    return [options.prefix, number, options.suffix].join('');
}
exports.formatCurrency = formatCurrency;
function formatNumber(options, value) {
    var integer = getIntegerPart(value, options.decimals);
    var thousands = splitThousands(integer, options.thousandSeparator);
    var decimal = getDecimalPart(value, options.decimals);
    var digits = options.useFixedPrecision
        ? toFixed(decimal, options.fixedPrecisionDigits)
        : toSignificant(decimal, integer.length, options.significantDigits);
    return joinDecimals(thousands, digits, options.decimalSeparator);
}
function getIntegerPart(value, decimals) {
    if (value.length <= decimals) {
        return '0';
    }
    else {
        var fragment = value.substring(0, value.length - decimals);
        return stripFrontZeroes(fragment);
    }
}
function stripFrontZeroes(value) {
    var stripped = value.replace(/^0+/, '');
    return stripped || '0';
}
function splitThousands(value, separator) {
    var count = value.length / 3;
    var resultValue = value.split('');
    for (var i = 1; i < count; i++) {
        resultValue.splice(-4 * i + 1, 0, separator);
    }
    return resultValue.join('');
}
function getDecimalPart(value, decimals) {
    if (value.length <= decimals) {
        return value.padStart(decimals, '0');
    }
    else {
        return value.substring(value.length - decimals);
    }
}
function joinDecimals(integer, decimals, separator) {
    if (!decimals) {
        return integer;
    }
    else {
        return "" + integer + separator + decimals;
    }
}
function toSignificant(decimal, integerLength, significantDigits) {
    var length = significantDigits - integerLength;
    if (length > decimal.length) {
        return stripEndZeroes(decimal);
    }
    else {
        return stripEndZeroes(decimal.substring(0, length));
    }
}
function stripEndZeroes(value) {
    return value.replace(/0+$/, '');
}
function toFixed(decimal, fixedPrecisionDigits) {
    if (fixedPrecisionDigits > decimal.length) {
        return decimal.padEnd(fixedPrecisionDigits, '0');
    }
    else {
        return decimal.substring(0, fixedPrecisionDigits);
    }
}

});

var Currency_1 = createCommonjsModule(function (module, exports) {
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.Token = exports.NativeCurrency = exports.FiatCurrency = exports.Currency = void 0;

var Currency = /** @class */ (function () {
    function Currency(name, ticker, decimals, formattingOptions) {
        if (formattingOptions === void 0) { formattingOptions = {}; }
        this.name = name;
        this.ticker = ticker;
        this.decimals = decimals;
        this.formattingOptions = __assign(__assign(__assign({}, formatting.DEFAULT_OPTIONS), { decimals: decimals }), formattingOptions);
    }
    Currency.prototype.format = function (value, overrideOptions) {
        if (overrideOptions === void 0) { overrideOptions = {}; }
        return formatting.formatCurrency(__assign(__assign({}, this.formattingOptions), overrideOptions), value);
    };
    return Currency;
}());
exports.Currency = Currency;
var FiatCurrency = /** @class */ (function (_super) {
    __extends(FiatCurrency, _super);
    function FiatCurrency(name, ticker, decimals, formattingOptions) {
        if (decimals === void 0) { decimals = 2; }
        if (formattingOptions === void 0) { formattingOptions = {}; }
        return _super.call(this, name, ticker, decimals, __assign({ useFixedPrecision: true, fixedPrecisionDigits: decimals }, formattingOptions)) || this;
    }
    return FiatCurrency;
}(Currency));
exports.FiatCurrency = FiatCurrency;
var NativeCurrency = /** @class */ (function (_super) {
    __extends(NativeCurrency, _super);
    function NativeCurrency(name, ticker, chainId, decimals, formattingOptions) {
        if (decimals === void 0) { decimals = 18; }
        if (formattingOptions === void 0) { formattingOptions = {}; }
        var _this = _super.call(this, name, ticker, decimals, __assign({ suffix: " " + ticker, significantDigits: 6 }, formattingOptions)) || this;
        _this.chainId = chainId;
        return _this;
    }
    return NativeCurrency;
}(Currency));
exports.NativeCurrency = NativeCurrency;
var Token = /** @class */ (function (_super) {
    __extends(Token, _super);
    function Token(name, ticker, chainId, address, decimals, formattingOptions) {
        if (decimals === void 0) { decimals = 18; }
        if (formattingOptions === void 0) { formattingOptions = {}; }
        var _this = _super.call(this, name, ticker, decimals, __assign({ suffix: " " + ticker, significantDigits: 6 }, formattingOptions)) || this;
        _this.chainId = chainId;
        _this.address = address;
        return _this;
    }
    return Token;
}(Currency));
exports.Token = Token;

});

var CurrencyValue_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.CurrencyValue = void 0;

var CurrencyValue = /** @class */ (function () {
    function CurrencyValue(currency, value) {
        this.currency = currency;
        this.value = value;
    }
    CurrencyValue.fromString = function (currency, value) {
        return new CurrencyValue(currency, lib_esm.BigNumber.from(value));
    };
    CurrencyValue.zero = function (currency) {
        return new CurrencyValue(currency, lib_esm.BigNumber.from(0));
    };
    CurrencyValue.prototype.toString = function () {
        return this.value.toString();
    };
    CurrencyValue.prototype.format = function (overrideOptions) {
        if (overrideOptions === void 0) { overrideOptions = {}; }
        return this.currency.format(this.value.toString(), overrideOptions);
    };
    CurrencyValue.prototype.checkCurrency = function (other) {
        if (this.currency !== other.currency) {
            throw new TypeError("Currency mismatch " + this.currency.ticker + " != " + other.currency.ticker);
        }
    };
    CurrencyValue.prototype.map = function (fn) {
        return new CurrencyValue(this.currency, fn(this.value));
    };
    CurrencyValue.prototype.add = function (other) {
        this.checkCurrency(other);
        return this.map(function (x) { return x.add(other.value); });
    };
    CurrencyValue.prototype.sub = function (other) {
        this.checkCurrency(other);
        return this.map(function (x) { return x.sub(other.value); });
    };
    CurrencyValue.prototype.mul = function (value) {
        return this.map(function (x) { return x.mul(value); });
    };
    CurrencyValue.prototype.div = function (value) {
        return this.map(function (x) { return x.div(value); });
    };
    CurrencyValue.prototype.mod = function (value) {
        return this.map(function (x) { return x.mod(value); });
    };
    CurrencyValue.prototype.equals = function (other) {
        return this.currency === other.currency && this.value.eq(other.value);
    };
    CurrencyValue.prototype.lt = function (other) {
        this.checkCurrency(other);
        return this.value.lt(other.value);
    };
    CurrencyValue.prototype.lte = function (other) {
        this.checkCurrency(other);
        return this.value.lte(other.value);
    };
    CurrencyValue.prototype.gt = function (other) {
        this.checkCurrency(other);
        return this.value.gt(other.value);
    };
    CurrencyValue.prototype.gte = function (other) {
        this.checkCurrency(other);
        return this.value.gte(other.value);
    };
    CurrencyValue.prototype.isZero = function () {
        return this.value.isZero();
    };
    return CurrencyValue;
}());
exports.CurrencyValue = CurrencyValue;

});

var Config = createCommonjsModule(function (module, exports) {
exports.__esModule = true;

});

var model = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (commonjsGlobal && commonjsGlobal.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
__exportStar(Currency_1, exports);
__exportStar(CurrencyValue_1, exports);
__exportStar(Config, exports);

});

var currencies = createCommonjsModule(function (module, exports) {
var _a;
exports.__esModule = true;
exports.NATIVE_CURRENCY = exports.KovanDai = exports.KovanEther = exports.Dai = exports.Ether = void 0;


exports.Ether = new model.NativeCurrency('Ether', 'ETH', chainId.ChainId.Mainnet);
exports.Dai = new model.Token('Dai', 'DAI', chainId.ChainId.Mainnet, '0x6B175474E89094C44Da98b954EedeAC495271d0F');
exports.KovanEther = new model.NativeCurrency('Kovan Ether', 'KETH', chainId.ChainId.Kovan);
exports.KovanDai = new model.Token('Dai', 'DAI', chainId.ChainId.Kovan, '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa');
exports.NATIVE_CURRENCY = (_a = {},
    _a[chainId.ChainId.Mainnet] = exports.Ether,
    _a[chainId.ChainId.Kovan] = exports.KovanEther,
    _a);

});

var constants = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (commonjsGlobal && commonjsGlobal.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
__exportStar(abi$3, exports);
__exportStar(chainId, exports);
__exportStar(currencies, exports);

});

var reactJsxRuntime_production_min = createCommonjsModule(function (module, exports) {
var g=60103;exports.Fragment=60107;if("function"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element");exports.Fragment=h("react.fragment");}var m=react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};
function q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=""+k);void 0!==a.key&&(e=""+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return {$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;
});

var jsxRuntime = createCommonjsModule(function (module) {

{
  module.exports = reactJsxRuntime_production_min;
}
});

var _default = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.DEFAULT_CONFIG = void 0;

exports.DEFAULT_CONFIG = {
    pollingInterval: 15000,
    supportedChains: [constants.ChainId.Mainnet, constants.ChainId.Goerli, constants.ChainId.Kovan, constants.ChainId.Rinkeby, constants.ChainId.Ropsten, constants.ChainId.xDai],
    notifications: {
        checkInterval: 500,
        expirationPeriod: 5000
    }
};

});

var context = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useConfig = exports.ConfigContext = void 0;


exports.ConfigContext = react.createContext(_default.DEFAULT_CONFIG);
function useConfig() {
    return react.useContext(exports.ConfigContext);
}
exports.useConfig = useConfig;

});

var provider = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.ConfigProvider = void 0;



function ConfigProvider(_a) {
    var config = _a.config, children = _a.children;
    return jsxRuntime.jsx(context.ConfigContext.Provider, { value: __assign(__assign({}, _default.DEFAULT_CONFIG), config), children: children }, void 0);
}
exports.ConfigProvider = ConfigProvider;

});

var context$1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useBlockNumber = exports.BlockNumberContext = void 0;

exports.BlockNumberContext = react.createContext(undefined);
function useBlockNumber() {
    return react.useContext(exports.BlockNumberContext);
}
exports.useBlockNumber = useBlockNumber;

});

var reducer = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.blockNumberReducer = void 0;
function blockNumberReducer(state, action) {
    var _a;
    if (state === void 0) { state = {}; }
    var current = state[action.chainId];
    if (!current || action.blockNumber > current) {
        return __assign(__assign({}, state), (_a = {}, _a[action.chainId] = action.blockNumber, _a));
    }
    return state;
}
exports.blockNumberReducer = blockNumberReducer;

});

var context$2 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useChainState = exports.ChainStateContext = void 0;

exports.ChainStateContext = react.createContext({
    multicallAddress: '',
    addCalls: function () {
        // empty
    },
    removeCalls: function () {
        // empty
    }
});
function useChainState() {
    return react.useContext(exports.ChainStateContext);
}
exports.useChainState = useChainState;

});

var useChainCalls_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useChainCall = exports.useChainCalls = void 0;


function useChainCalls(calls) {
    var _a = react.useContext(context$2.ChainStateContext), addCalls = _a.addCalls, removeCalls = _a.removeCalls, value = _a.value;
    react.useEffect(function () {
        addCalls(calls);
        return function () { return removeCalls(calls); };
    }, [JSON.stringify(calls), addCalls, removeCalls]);
    return calls.map(function (_a) {
        var _b, _c;
        var address = _a.address, data = _a.data;
        return (_c = (_b = value === null || value === void 0 ? void 0 : value.state) === null || _b === void 0 ? void 0 : _b[address]) === null || _c === void 0 ? void 0 : _c[data];
    });
}
exports.useChainCalls = useChainCalls;
function useChainCall(call) {
    var result = useChainCalls(call ? [call] : [])[0];
    return result;
}
exports.useChainCall = useChainCall;

});

var useMulticallAddress_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useMulticallAddress = void 0;


function useMulticallAddress() {
    return react.useContext(context$2.ChainStateContext).multicallAddress;
}
exports.useMulticallAddress = useMulticallAddress;

});

var useBlockMeta_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useBlockMeta = void 0;




var GET_CURRENT_BLOCK_TIMESTAMP_CALL = constants.MultiCallABI.encodeFunctionData('getCurrentBlockTimestamp', []);
var GET_CURRENT_BLOCK_DIFFICULTY_CALL = constants.MultiCallABI.encodeFunctionData('getCurrentBlockDifficulty', []);
function useBlockMeta() {
    var address = useMulticallAddress_1.useMulticallAddress();
    var timestamp = useChainCalls_1.useChainCall(address && { address: address, data: GET_CURRENT_BLOCK_TIMESTAMP_CALL });
    var difficulty = useChainCalls_1.useChainCall(address && { address: address, data: GET_CURRENT_BLOCK_DIFFICULTY_CALL });
    return {
        timestamp: timestamp !== undefined ? new Date(lib_esm.BigNumber.from(timestamp).mul(1000).toNumber()) : undefined,
        difficulty: difficulty !== undefined ? lib_esm.BigNumber.from(difficulty) : undefined
    };
}
exports.useBlockMeta = useBlockMeta;

});

var useDebounce_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useDebounce = void 0;

// modified from https://usehooks.com/useDebounce/
function useDebounce(value, delay) {
    var _a = react.useState(value), debouncedValue = _a[0], setDebouncedValue = _a[1];
    react.useEffect(function () {
        // Update debounced value after delay
        var handler = setTimeout(function () {
            setDebouncedValue(value);
        }, delay);
        // Cancel the timeout if value changes (also on delay change or unmount)
        // This is how we prevent debounced value from updating if value is changed ...
        // .. within the delay period. Timeout gets cleared and restarted.
        return function () {
            clearTimeout(handler);
        };
    }, [value, delay]);
    return debouncedValue;
}
exports.useDebounce = useDebounce;

});

var useDebouncePair_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useDebouncePair = void 0;

// modified from https://usehooks.com/useDebounce/
function useDebouncePair(first, second, delay) {
    var _a = react.useState([first, second]), debouncedValue = _a[0], setDebouncedValue = _a[1];
    react.useEffect(function () {
        // Update debounced value after delay
        var handler = setTimeout(function () {
            setDebouncedValue([first, second]);
        }, delay);
        // Cancel the timeout if value changes (also on delay change or unmount)
        // This is how we prevent debounced value from updating if value is changed ...
        // .. within the delay period. Timeout gets cleared and restarted.
        return function () {
            clearTimeout(handler);
        };
    }, [first, second, delay]);
    return debouncedValue;
}
exports.useDebouncePair = useDebouncePair;

});

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

// A type of promise-like that resolves synchronously and supports only one observer
/*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = /*#__PURE__*/Symbol("Symbol.iterator")) : "@@iterator"; // Asynchronously iterate through an object's values
/*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.asyncIterator || (Symbol.asyncIterator = /*#__PURE__*/Symbol("Symbol.asyncIterator")) : "@@asyncIterator"; // Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing

function _catch(body, recover) {
  try {
    var result = body();
  } catch (e) {
    return recover(e);
  }

  if (result && result.then) {
    return result.then(void 0, recover);
  }

  return result;
} // Asynchronously await a promise and pass the result to a finally continuation

function normalizeChainId(chainId) {
  if (typeof chainId === 'string') {
    // Temporary fix until the next version of Metamask Mobile gets released.
    // In the current version (0.2.13), the chainId starts with “Ox” rather
    // than “0x”. Fix: https://github.com/MetaMask/metamask-mobile/pull/1275
    chainId = chainId.replace(/^Ox/, '0x');
    var parsedChainId = Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);
    !!Number.isNaN(parsedChainId) ?  invariant(false) : void 0;
    return parsedChainId;
  } else {
    !Number.isInteger(chainId) ?  invariant(false) : void 0;
    return chainId;
  }
} // https://github.com/ethers-io/ethers.js/blob/d9d438a119bb11f8516fc9cf02c534ab3816fcb3/packages/address/src.ts/index.ts

function normalizeAccount(_address) {
  !(typeof _address === 'string' && _address.match(/^(0x)?[0-9a-fA-F]{40}$/)) ?  invariant(false) : void 0;
  var address = _address.substring(0, 2) === '0x' ? _address : "0x" + _address;
  var chars = address.toLowerCase().substring(2).split('');
  var charsArray = new Uint8Array(40);

  for (var i = 0; i < 40; i++) {
    charsArray[i] = chars[i].charCodeAt(0);
  }

  var hashed = arrayify(keccak256(charsArray));

  for (var _i = 0; _i < 40; _i += 2) {
    if (hashed[_i >> 1] >> 4 >= 8) {
      chars[_i] = chars[_i].toUpperCase();
    }

    if ((hashed[_i >> 1] & 0x0f) >= 8) {
      chars[_i + 1] = chars[_i + 1].toUpperCase();
    }
  }

  var addressChecksum = "0x" + chars.join('');
  !!(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && address !== addressChecksum) ?  invariant(false) : void 0;
  return addressChecksum;
}

var augmentConnectorUpdate = function augmentConnectorUpdate(connector, update) {
  try {
    var _temp3 = function _temp3(provider) {
      return Promise.resolve(Promise.all([update.chainId === undefined ? connector.getChainId() : update.chainId, update.account === undefined ? connector.getAccount() : update.account])).then(function (_ref2) {
        var _chainId = _ref2[0],
            _account = _ref2[1];
        var chainId = normalizeChainId(_chainId);

        if (!!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {
          throw new UnsupportedChainIdError(chainId, connector.supportedChainIds);
        }

        var account = _account === null ? _account : normalizeAccount(_account);
        return {
          provider: provider,
          chainId: chainId,
          account: account
        };
      });
    };

    var _temp4 = update.provider === undefined;

    return Promise.resolve(_temp4 ? Promise.resolve(connector.getProvider()).then(_temp3) : _temp3(update.provider));
  } catch (e) {
    return Promise.reject(e);
  }
};

var StaleConnectorError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(StaleConnectorError, _Error);

  function StaleConnectorError() {
    var _this;

    _this = _Error.call(this) || this;
    _this.name = _this.constructor.name;
    return _this;
  }

  return StaleConnectorError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

var UnsupportedChainIdError = /*#__PURE__*/function (_Error2) {
  _inheritsLoose(UnsupportedChainIdError, _Error2);

  function UnsupportedChainIdError(unsupportedChainId, supportedChainIds) {
    var _this2;

    _this2 = _Error2.call(this) || this;
    _this2.name = _this2.constructor.name;
    _this2.message = "Unsupported chain id: " + unsupportedChainId + ". Supported chain ids are: " + supportedChainIds + ".";
    return _this2;
  }

  return UnsupportedChainIdError;
}( /*#__PURE__*/_wrapNativeSuper(Error));
var ActionType;

(function (ActionType) {
  ActionType[ActionType["ACTIVATE_CONNECTOR"] = 0] = "ACTIVATE_CONNECTOR";
  ActionType[ActionType["UPDATE"] = 1] = "UPDATE";
  ActionType[ActionType["UPDATE_FROM_ERROR"] = 2] = "UPDATE_FROM_ERROR";
  ActionType[ActionType["ERROR"] = 3] = "ERROR";
  ActionType[ActionType["ERROR_FROM_ACTIVATION"] = 4] = "ERROR_FROM_ACTIVATION";
  ActionType[ActionType["DEACTIVATE_CONNECTOR"] = 5] = "DEACTIVATE_CONNECTOR";
})(ActionType || (ActionType = {}));

function reducer$1(state, _ref) {
  var type = _ref.type,
      payload = _ref.payload;

  switch (type) {
    case ActionType.ACTIVATE_CONNECTOR:
      {
        var connector = payload.connector,
            provider = payload.provider,
            chainId = payload.chainId,
            account = payload.account,
            onError = payload.onError;
        return {
          connector: connector,
          provider: provider,
          chainId: chainId,
          account: account,
          onError: onError
        };
      }

    case ActionType.UPDATE:
      {
        var _provider = payload.provider,
            _chainId2 = payload.chainId,
            _account2 = payload.account;
        return _extends({}, state, _provider === undefined ? {} : {
          provider: _provider
        }, _chainId2 === undefined ? {} : {
          chainId: _chainId2
        }, _account2 === undefined ? {} : {
          account: _account2
        });
      }

    case ActionType.UPDATE_FROM_ERROR:
      {
        var _provider2 = payload.provider,
            _chainId3 = payload.chainId,
            _account3 = payload.account;
        return _extends({}, state, _provider2 === undefined ? {} : {
          provider: _provider2
        }, _chainId3 === undefined ? {} : {
          chainId: _chainId3
        }, _account3 === undefined ? {} : {
          account: _account3
        }, {
          error: undefined
        });
      }

    case ActionType.ERROR:
      {
        var error = payload.error;
        var _connector = state.connector,
            _onError = state.onError;
        return {
          connector: _connector,
          error: error,
          onError: _onError
        };
      }

    case ActionType.ERROR_FROM_ACTIVATION:
      {
        var _connector2 = payload.connector,
            _error = payload.error;
        return {
          connector: _connector2,
          error: _error
        };
      }

    case ActionType.DEACTIVATE_CONNECTOR:
      {
        return {};
      }
  }
}

function useWeb3ReactManager() {
  var _useReducer = react.useReducer(reducer$1, {}),
      state = _useReducer[0],
      dispatch = _useReducer[1];

  var connector = state.connector,
      provider = state.provider,
      chainId = state.chainId,
      account = state.account,
      onError = state.onError,
      error = state.error;
  var updateBusterRef = react.useRef(-1);
  updateBusterRef.current += 1;
  var activate = react.useCallback(function (connector, onError, throwErrors) {
    if (throwErrors === void 0) {
      throwErrors = false;
    }

    try {
      var updateBusterInitial = updateBusterRef.current;
      var activated = false;
      return Promise.resolve(_catch(function () {
        return Promise.resolve(connector.activate().then(function (update) {
          activated = true;
          return update;
        })).then(function (update) {
          return Promise.resolve(augmentConnectorUpdate(connector, update)).then(function (augmentedUpdate) {
            if (updateBusterRef.current > updateBusterInitial) {
              throw new StaleConnectorError();
            }

            dispatch({
              type: ActionType.ACTIVATE_CONNECTOR,
              payload: _extends({
                connector: connector
              }, augmentedUpdate, {
                onError: onError
              })
            });
          });
        });
      }, function (error) {
        if (error instanceof StaleConnectorError) {
          activated && connector.deactivate();
          "production" !== "production" ? warning(false, "Suppressed stale connector activation " + connector) : void 0;
        } else if (throwErrors) {
          activated && connector.deactivate();
          throw error;
        } else if (onError) {
          activated && connector.deactivate();
          onError(error);
        } else {
          // we don't call activated && connector.deactivate() here because it'll be handled in the useEffect
          dispatch({
            type: ActionType.ERROR_FROM_ACTIVATION,
            payload: {
              connector: connector,
              error: error
            }
          });
        }
      }));
    } catch (e) {
      return Promise.reject(e);
    }
  }, []);
  var setError = react.useCallback(function (error) {
    dispatch({
      type: ActionType.ERROR,
      payload: {
        error: error
      }
    });
  }, []);
  var deactivate = react.useCallback(function () {
    dispatch({
      type: ActionType.DEACTIVATE_CONNECTOR
    });
  }, []);
  var handleUpdate = react.useCallback(function (update) {
    try {
      if (!connector) {
        throw Error("This should never happen, it's just so Typescript stops complaining");
      }

      var updateBusterInitial = updateBusterRef.current; // updates are handled differently depending on whether the connector is active vs in an error state

      return Promise.resolve(function () {
        if (!error) {
          var _chainId4 = update.chainId === undefined ? undefined : normalizeChainId(update.chainId);

          if (_chainId4 !== undefined && !!connector.supportedChainIds && !connector.supportedChainIds.includes(_chainId4)) {
            var _error2 = new UnsupportedChainIdError(_chainId4, connector.supportedChainIds);

            onError ? onError(_error2) : dispatch({
              type: ActionType.ERROR,
              payload: {
                error: _error2
              }
            });
          } else {
            var _account4 = typeof update.account === 'string' ? normalizeAccount(update.account) : update.account;

            dispatch({
              type: ActionType.UPDATE,
              payload: {
                provider: update.provider,
                chainId: _chainId4,
                account: _account4
              }
            });
          }
        } else {
          return _catch(function () {
            return Promise.resolve(augmentConnectorUpdate(connector, update)).then(function (augmentedUpdate) {
              if (updateBusterRef.current > updateBusterInitial) {
                throw new StaleConnectorError();
              }

              dispatch({
                type: ActionType.UPDATE_FROM_ERROR,
                payload: augmentedUpdate
              });
            });
          }, function (error) {
            if (error instanceof StaleConnectorError) {
              "production" !== "production" ? warning(false, "Suppressed stale connector update from error state " + connector + " " + update) : void 0;
            } else {
              // though we don't have to, we're re-circulating the new error
              onError ? onError(error) : dispatch({
                type: ActionType.ERROR,
                payload: {
                  error: error
                }
              });
            }
          });
        }
      }());
    } catch (e) {
      return Promise.reject(e);
    }
  }, [connector, error, onError]);
  var handleError = react.useCallback(function (error) {
    onError ? onError(error) : dispatch({
      type: ActionType.ERROR,
      payload: {
        error: error
      }
    });
  }, [onError]);
  var handleDeactivate = react.useCallback(function () {
    dispatch({
      type: ActionType.DEACTIVATE_CONNECTOR
    });
  }, []); // ensure that connectors which were set are deactivated

  react.useEffect(function () {
    return function () {
      if (connector) {
        connector.deactivate();
      }
    };
  }, [connector]); // ensure that events emitted from the set connector are handled appropriately

  react.useEffect(function () {
    if (connector) {
      connector.on(ConnectorEvent.Update, handleUpdate).on(ConnectorEvent.Error, handleError).on(ConnectorEvent.Deactivate, handleDeactivate);
    }

    return function () {
      if (connector) {
        connector.off(ConnectorEvent.Update, handleUpdate).off(ConnectorEvent.Error, handleError).off(ConnectorEvent.Deactivate, handleDeactivate);
      }
    };
  }, [connector, handleUpdate, handleError, handleDeactivate]);
  return {
    connector: connector,
    provider: provider,
    chainId: chainId,
    account: account,
    activate: activate,
    setError: setError,
    deactivate: deactivate,
    error: error
  };
}

var PRIMARY_KEY = 'primary';
var CONTEXTS = {};
function createWeb3ReactRoot(key) {
  !!CONTEXTS[key] ?  invariant(false) : void 0;
  CONTEXTS[key] = react.createContext({
    activate: function () {
      try {
        !false ? "production" !== "production" ? invariant(false, 'No <Web3ReactProvider ... /> found.') : invariant(false) : void 0;
        return Promise.resolve();
      } catch (e) {
        return Promise.reject(e);
      }
    },
    setError: function setError() {
        invariant(false) ;
    },
    deactivate: function deactivate() {
        invariant(false) ;
    },
    active: false
  });
  CONTEXTS[key].displayName = "Web3ReactContext - " + key;
  var Provider = CONTEXTS[key].Provider;
  return function Web3ReactProvider(_ref) {
    var getLibrary = _ref.getLibrary,
        children = _ref.children;

    var _useWeb3ReactManager = useWeb3ReactManager(),
        connector = _useWeb3ReactManager.connector,
        provider = _useWeb3ReactManager.provider,
        chainId = _useWeb3ReactManager.chainId,
        account = _useWeb3ReactManager.account,
        activate = _useWeb3ReactManager.activate,
        setError = _useWeb3ReactManager.setError,
        deactivate = _useWeb3ReactManager.deactivate,
        error = _useWeb3ReactManager.error;

    var active = connector !== undefined && chainId !== undefined && account !== undefined && !!!error;
    var library = react.useMemo(function () {
      return active && chainId !== undefined && Number.isInteger(chainId) && !!connector ? getLibrary(provider, connector) : undefined;
    }, [active, getLibrary, provider, connector, chainId]);
    var web3ReactContext = {
      connector: connector,
      library: library,
      chainId: chainId,
      account: account,
      activate: activate,
      setError: setError,
      deactivate: deactivate,
      active: active,
      error: error
    };
    return react.createElement(Provider, {
      value: web3ReactContext
    }, children);
  };
}
var Web3ReactProvider = /*#__PURE__*/createWeb3ReactRoot(PRIMARY_KEY);
function getWeb3ReactContext(key) {
  if (key === void 0) {
    key = PRIMARY_KEY;
  }

  !Object.keys(CONTEXTS).includes(key) ?  invariant(false) : void 0;
  return CONTEXTS[key];
}
function useWeb3React(key) {
  return react.useContext(getWeb3ReactContext(key));
}

var core_esm = /*#__PURE__*/Object.freeze({
    __proto__: null,
    PRIMARY_KEY: PRIMARY_KEY,
    UnsupportedChainIdError: UnsupportedChainIdError,
    Web3ReactProvider: Web3ReactProvider,
    createWeb3ReactRoot: createWeb3ReactRoot,
    getWeb3ReactContext: getWeb3ReactContext,
    useWeb3React: useWeb3React
});

var useEthers_1 = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.useEthers = void 0;




function useEthers() {
    var result = core_esm.useWeb3React();
    var supportedChains = context.useConfig().supportedChains;
    var activateBrowserWallet = react.useMemo(function () {
        var injected = new injectedConnector_esm.InjectedConnector({ supportedChainIds: supportedChains });
        return function () { return result.activate(injected); };
    }, [supportedChains]);
    return __assign(__assign({}, result), { activateBrowserWallet: activateBrowserWallet });
}
exports.useEthers = useEthers;

});

var useContractCall_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useContractCalls = exports.useContractCall = void 0;


function useContractCall(call) {
    var callData = call && call.args.every(function (arg) { return arg !== undefined; }) && call.abi.encodeFunctionData(call.method, call.args);
    var result = useChainCalls_1.useChainCall(call && callData && { address: call.address, data: callData });
    if (result === '0x') {
        console.warn("Invalid contract call: address=" + (call && call.address) + " method=" + (call && call.method) + " args=" + (call && call.args));
        return undefined;
    }
    return react.useMemo(function () { return (call && result !== undefined ? call.abi.decodeFunctionResult(call.method, result) : undefined); }, [result]);
}
exports.useContractCall = useContractCall;
function useContractCalls(calls) {
    var results = useChainCalls_1.useChainCalls(calls.map(function (call) { return ({
        address: call.address,
        data: call.abi.encodeFunctionData(call.method, call.args)
    }); }));
    return react.useMemo(function () {
        return results.map(function (result, idx) {
            return result ? calls[idx].abi.decodeFunctionResult(calls[idx].method, result) : undefined;
        });
    }, [results]);
}
exports.useContractCalls = useContractCalls;

});

var useContractFunction_1 = createCommonjsModule(function (module, exports) {
var __awaiter = (commonjsGlobal && commonjsGlobal.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (commonjsGlobal && commonjsGlobal.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.useContractFunction = exports.connectContractToSigner = void 0;



function connectContractToSigner(contract, options, library) {
    if (contract.signer) {
        return contract;
    }
    if (options === null || options === void 0 ? void 0 : options.signer) {
        return contract.connect(options.signer);
    }
    if (library === null || library === void 0 ? void 0 : library.getSigner()) {
        return contract.connect(library.getSigner());
    }
    throw new TypeError('No signer available in contract, options or library');
}
exports.connectContractToSigner = connectContractToSigner;
function useContractFunction(contract, functionName, options) {
    var _this = this;
    var _a = react.useState({ status: 'None' }), state = _a[0], setState = _a[1];
    var addTransaction = providers.useTransactionsContext().addTransaction;
    var _b = useEthers_1.useEthers(), library = _b.library, chainId = _b.chainId;
    var transaction;
    var send = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(_this, void 0, void 0, function () {
            var contractWithSigner, receipt, e_1, errorMessage;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!chainId) {
                            return [2 /*return*/];
                        }
                        contractWithSigner = connectContractToSigner(contract, options, library);
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, contractWithSigner[functionName].apply(contractWithSigner, args)];
                    case 2:
                        transaction = _b.sent();
                        setState({ transaction: transaction, status: 'Mining', chainId: chainId });
                        addTransaction({
                            transaction: transaction,
                            submittedAt: Date.now(),
                            transactionName: options === null || options === void 0 ? void 0 : options.transactionName
                        });
                        return [4 /*yield*/, transaction.wait()];
                    case 3:
                        receipt = _b.sent();
                        setState({ receipt: receipt, transaction: transaction, status: 'Success', chainId: chainId });
                        return [3 /*break*/, 5];
                    case 4:
                        e_1 = _b.sent();
                        errorMessage = (_a = e_1.reason) !== null && _a !== void 0 ? _a : e_1.message;
                        if (transaction) {
                            setState({ status: 'Fail', transaction: transaction, receipt: e_1.receipt, errorMessage: errorMessage, chainId: chainId });
                        }
                        else {
                            setState({ status: 'Exception', errorMessage: errorMessage, chainId: chainId });
                        }
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    return { send: send, state: state };
}
exports.useContractFunction = useContractFunction;

});

var useEtherBalance_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useEtherBalance = void 0;



function useEtherBalance(address) {
    var _a;
    var multicallAddress = useMulticallAddress_1.useMulticallAddress();
    var etherBalance = ((_a = useContractCall_1.useContractCall(multicallAddress &&
        address && {
        abi: constants.MultiCallABI,
        address: multicallAddress,
        method: 'getEthBalance',
        args: [address]
    })) !== null && _a !== void 0 ? _a : [])[0];
    return etherBalance;
}
exports.useEtherBalance = useEtherBalance;

});

var useTokenBalance_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useTokenBalance = void 0;


function useTokenBalance(tokenAddress, address) {
    var _a;
    var tokenBalance = ((_a = useContractCall_1.useContractCall(address &&
        tokenAddress && {
        abi: constants.ERC20Interface,
        address: tokenAddress,
        method: 'balanceOf',
        args: [address]
    })) !== null && _a !== void 0 ? _a : [])[0];
    return tokenBalance;
}
exports.useTokenBalance = useTokenBalance;

});

var useTokenAllowance_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useTokenAllowance = void 0;


function useTokenAllowance(tokenAddress, ownerAddress, spenderAddress) {
    var _a;
    var allowance = ((_a = useContractCall_1.useContractCall(ownerAddress &&
        spenderAddress &&
        tokenAddress && {
        abi: constants.ERC20Interface,
        address: tokenAddress,
        method: 'allowance',
        args: [ownerAddress, spenderAddress]
    })) !== null && _a !== void 0 ? _a : [])[0];
    return allowance;
}
exports.useTokenAllowance = useTokenAllowance;

});

var useLocalStorage_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useLocalStorage = void 0;

function getItem(key) {
    if (typeof window === 'undefined') {
        return null;
    }
    var item = window.localStorage.getItem(key);
    if (item !== null) {
        try {
            return JSON.parse(item);
        }
        catch (_a) {
            // ignore error
        }
    }
}
function setItem(key, value) {
    if (value === undefined) {
        window.localStorage.removeItem(key);
    }
    else {
        var toStore = JSON.stringify(value);
        window.localStorage.setItem(key, toStore);
        return JSON.parse(toStore);
    }
}
function useLocalStorage(key) {
    var _a = react.useState(function () { return getItem(key); }), value = _a[0], setValue = _a[1];
    react.useEffect(function () {
        setValue(getItem(key));
    }, [key]);
    react.useEffect(function () {
        setItem(key, value);
    }, [value, key]);
    return [value, setValue];
}
exports.useLocalStorage = useLocalStorage;

});

var useTransactions_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useTransactions = void 0;



function useTransactions() {
    var _a = useEthers_1.useEthers(), chainId = _a.chainId, account = _a.account;
    var _b = providers.useTransactionsContext(), addTransaction = _b.addTransaction, transactions = _b.transactions;
    var filtered = react.useMemo(function () {
        var _a;
        if (chainId === undefined || !account) {
            return [];
        }
        return ((_a = transactions[chainId]) !== null && _a !== void 0 ? _a : []).filter(function (x) { return x.transaction.from === account; });
    }, [transactions, chainId, account]);
    return {
        transactions: filtered,
        addTransaction: addTransaction
    };
}
exports.useTransactions = useTransactions;

});

var useInterval_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useInterval = void 0;

// https://usehooks-typescript.com/react-hook/use-interval
function useInterval(callback, delay) {
    var savedCallback = react.useRef(callback);
    react.useEffect(function () {
        savedCallback.current = callback;
    }, [callback]);
    react.useEffect(function () {
        if (delay === null) {
            return;
        }
        var id = setInterval(function () { return savedCallback.current(); }, delay);
        return function () { return clearInterval(id); };
    }, [delay]);
}
exports.useInterval = useInterval;

});

var useNotifications_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useNotifications = void 0;





function getExpiredNotifications(notifications, expirationPeriod) {
    var timeFromCreation = function (creationTime) { return Date.now() - creationTime; };
    return notifications.filter(function (notification) { return timeFromCreation(notification.submittedAt) >= expirationPeriod; });
}
function useNotifications() {
    var _a = useEthers_1.useEthers(), chainId = _a.chainId, account = _a.account;
    var _b = providers.useNotificationsContext(), addNotification = _b.addNotification, notifications = _b.notifications, removeNotification = _b.removeNotification;
    var _c = context.useConfig().notifications, checkInterval = _c.checkInterval, expirationPeriod = _c.expirationPeriod;
    var chainNotifications = react.useMemo(function () {
        var _a;
        if (chainId === undefined || !account) {
            return [];
        }
        return (_a = notifications[chainId]) !== null && _a !== void 0 ? _a : [];
    }, [notifications, chainId, account]);
    useInterval_1.useInterval(function () {
        if (!chainId) {
            return;
        }
        var expiredNotification = getExpiredNotifications(chainNotifications, expirationPeriod);
        for (var _i = 0, expiredNotification_1 = expiredNotification; _i < expiredNotification_1.length; _i++) {
            var notification = expiredNotification_1[_i];
            removeNotification({ notificationId: notification.id, chainId: chainId });
        }
    }, checkInterval);
    return {
        notifications: chainNotifications,
        addNotification: addNotification,
        removeNotification: removeNotification
    };
}
exports.useNotifications = useNotifications;

});

var hooks = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (commonjsGlobal && commonjsGlobal.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
__exportStar(useBlockMeta_1, exports);
__exportStar(useChainCalls_1, exports);
__exportStar(useDebounce_1, exports);
__exportStar(useDebouncePair_1, exports);
__exportStar(useEthers_1, exports);
__exportStar(useMulticallAddress_1, exports);
__exportStar(useContractCall_1, exports);
__exportStar(useContractFunction_1, exports);
__exportStar(useEtherBalance_1, exports);
__exportStar(useTokenBalance_1, exports);
__exportStar(useTokenAllowance_1, exports);
__exportStar(useLocalStorage_1, exports);
__exportStar(useTransactions_1, exports);
__exportStar(useNotifications_1, exports);
__exportStar(useInterval_1, exports);

});

var provider$1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.BlockNumberProvider = void 0;





function BlockNumberProvider(_a) {
    var children = _a.children;
    var _b = hooks.useEthers(), library = _b.library, chainId = _b.chainId;
    var _c = react.useReducer(reducer.blockNumberReducer, {}), state = _c[0], dispatch = _c[1];
    react.useEffect(function () {
        if (library && chainId !== undefined) {
            var update_1 = function (blockNumber) { return dispatch({ chainId: chainId, blockNumber: blockNumber }); };
            library.on('block', update_1);
            return function () {
                library.off('block', update_1);
            };
        }
    }, [library, chainId]);
    var debouncedState = hooks.useDebounce(state, 100);
    var blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;
    return jsxRuntime.jsx(context$1.BlockNumberContext.Provider, { value: blockNumber, children: children }, void 0);
}
exports.BlockNumberProvider = BlockNumberProvider;

});

var callsReducer_1 = createCommonjsModule(function (module, exports) {
var __spreadArrays = (commonjsGlobal && commonjsGlobal.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
exports.__esModule = true;
exports.callsReducer = void 0;
function callsReducer(state, action) {
    if (state === void 0) { state = []; }
    if (action.type === 'ADD_CALLS') {
        return __spreadArrays(state, action.calls);
    }
    else {
        var finalState = state;
        var _loop_1 = function (call) {
            var index = finalState.findIndex(function (x) { return x.address === call.address && x.data === call.data; });
            if (index !== -1) {
                finalState = finalState.filter(function (_, i) { return i !== index; });
            }
        };
        for (var _i = 0, _a = action.calls; _i < _a.length; _i++) {
            var call = _a[_i];
            _loop_1(call);
        }
        return finalState;
    }
}
exports.callsReducer = callsReducer;

});

var chainStateReducer_1 = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.chainStateReducer = void 0;
function chainStateReducer(state, action) {
    var _a, _b;
    var _c;
    if (state === void 0) { state = {}; }
    var current = (_c = state[action.chainId]) === null || _c === void 0 ? void 0 : _c.blockNumber;
    if (!current || action.blockNumber >= current) {
        if (action.type === 'FETCH_SUCCESS') {
            return __assign(__assign({}, state), (_a = {}, _a[action.chainId] = { blockNumber: action.blockNumber, state: action.state }, _a));
        }
        else if (action.type === 'FETCH_ERROR') {
            return __assign(__assign({}, state), (_b = {}, _b[action.chainId] = __assign(__assign({}, state[action.chainId]), { blockNumber: action.blockNumber, error: action.error }), _b));
        }
    }
    return state;
}
exports.chainStateReducer = chainStateReducer;

});

var model$1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;

});

var multicall_1 = createCommonjsModule(function (module, exports) {
var __awaiter = (commonjsGlobal && commonjsGlobal.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (commonjsGlobal && commonjsGlobal.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.multicall = void 0;

var ABI = [
    'function aggregate(tuple(address target, bytes callData)[] calls) view returns (uint256 blockNumber, bytes[] returnData)',
];
function multicall(provider, address, blockNumber, requests) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var contract, _b, results, state, i, _c, address_1, data, result, stateForAddress;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    if (requests.length === 0) {
                        return [2 /*return*/, {}];
                    }
                    contract = new lib_esm$3.Contract(address, ABI, provider);
                    return [4 /*yield*/, contract.aggregate(requests.map(function (_a) {
                            var address = _a.address, data = _a.data;
                            return [address, data];
                        }), { blockTag: blockNumber })];
                case 1:
                    _b = _d.sent(), results = _b[1];
                    state = {};
                    for (i = 0; i < requests.length; i++) {
                        _c = requests[i], address_1 = _c.address, data = _c.data;
                        result = results[i];
                        stateForAddress = (_a = state[address_1]) !== null && _a !== void 0 ? _a : {};
                        stateForAddress[data] = result;
                        state[address_1] = stateForAddress;
                    }
                    return [2 /*return*/, state];
            }
        });
    });
}
exports.multicall = multicall;

});

var provider$2 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.ChainStateProvider = void 0;








function ChainStateProvider(_a) {
    var children = _a.children, multicallAddresses = _a.multicallAddresses;
    var _b = hooks.useEthers(), library = _b.library, chainId = _b.chainId;
    var blockNumber = context$1.useBlockNumber();
    var _c = react.useReducer(callsReducer_1.callsReducer, []), calls = _c[0], dispatchCalls = _c[1];
    var _d = react.useReducer(chainStateReducer_1.chainStateReducer, {}), state = _d[0], dispatchState = _d[1];
    var addCalls = react.useCallback(function (calls) {
        dispatchCalls({ type: 'ADD_CALLS', calls: calls });
    }, [dispatchCalls]);
    var removeCalls = react.useCallback(function (calls) {
        dispatchCalls({ type: 'REMOVE_CALLS', calls: calls });
    }, [dispatchCalls]);
    var _e = hooks.useDebouncePair(calls, chainId, 50), debouncedCalls = _e[0], debouncedId = _e[1];
    var uniqueCalls = debouncedId === chainId ? getUnique(debouncedCalls) : [];
    var multicallAddress = chainId !== undefined ? multicallAddresses[chainId] : undefined;
    react.useEffect(function () {
        if (library && blockNumber !== undefined && chainId !== undefined) {
            if (!multicallAddress) {
                console.error("Missing multicall address for chain id " + chainId);
                return;
            }
            multicall_1.multicall(library, multicallAddress, blockNumber, uniqueCalls)
                .then(function (state) { return dispatchState({ type: 'FETCH_SUCCESS', blockNumber: blockNumber, chainId: chainId, state: state }); })["catch"](function (error) {
                console.error(error);
                dispatchState({ type: 'FETCH_ERROR', blockNumber: blockNumber, chainId: chainId, error: error });
            });
        }
    }, [library, blockNumber, chainId, multicallAddress, JSON.stringify(uniqueCalls)]);
    var value = chainId !== undefined ? state[chainId] : undefined;
    var provided = { value: value, multicallAddress: multicallAddress, addCalls: addCalls, removeCalls: removeCalls };
    return jsxRuntime.jsx(context$2.ChainStateContext.Provider, { value: provided, children: children }, void 0);
}
exports.ChainStateProvider = ChainStateProvider;
function getUnique(requests) {
    var unique = [];
    var _loop_1 = function (request) {
        if (!unique.find(function (x) { return x.address === request.address && x.data === request.data; })) {
            unique.push(request);
        }
    };
    for (var _i = 0, requests_1 = requests; _i < requests_1.length; _i++) {
        var request = requests_1[_i];
        _loop_1(request);
    }
    return unique;
}

});

var chainState = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (commonjsGlobal && commonjsGlobal.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
__exportStar(callsReducer_1, exports);
__exportStar(chainStateReducer_1, exports);
__exportStar(context$2, exports);
__exportStar(model$1, exports);
__exportStar(multicall_1, exports);
__exportStar(provider$2, exports);

});

var EthersProvider_1 = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.EthersProvider = void 0;



var DEFAULT_POLLING_INTERVAL = 15000;
function EthersProvider(_a) {
    var children = _a.children, pollingInterval = _a.pollingInterval;
    function getLibrary(provider) {
        var library = new lib_esm$4.Web3Provider(provider, 'any');
        library.pollingInterval = pollingInterval || DEFAULT_POLLING_INTERVAL;
        return library;
    }
    return jsxRuntime.jsx(core_esm.Web3ReactProvider, __assign({ getLibrary: getLibrary }, { children: children }), void 0);
}
exports.EthersProvider = EthersProvider;

});

var model$2 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.DEFAULT_NOTIFICATIONS = void 0;
exports.DEFAULT_NOTIFICATIONS = {};

});

var context$3 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useNotificationsContext = exports.NotificationsContext = void 0;


exports.NotificationsContext = react.createContext({
    notifications: model$2.DEFAULT_NOTIFICATIONS,
    addNotification: function () { return undefined; },
    removeNotification: function () { return undefined; }
});
function useNotificationsContext() {
    return react.useContext(exports.NotificationsContext);
}
exports.useNotificationsContext = useNotificationsContext;

});

var reducer$2 = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (commonjsGlobal && commonjsGlobal.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
exports.__esModule = true;
exports.notificationReducer = void 0;
function notificationReducer(state, action) {
    var _a, _b;
    var _c;
    var chainId = action.chainId;
    var chainState = (_c = state[chainId]) !== null && _c !== void 0 ? _c : [];
    switch (action.type) {
        case 'ADD_NOTIFICATION':
            return __assign(__assign({}, state), (_a = {}, _a[chainId] = __spreadArrays([action.notification], chainState), _a));
        case 'REMOVE_NOTIFICATION': {
            return __assign(__assign({}, state), (_b = {}, _b[chainId] = chainState.filter(function (notification) { return notification.id !== action.notificationId; }), _b));
        }
    }
}
exports.notificationReducer = notificationReducer;

});

// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped
// optimize the gzip compression for this alphabet.
let urlAlphabet =
  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';

// This file replaces `index.js` in bundlers like webpack or Rollup,

let random = bytes => crypto.getRandomValues(new Uint8Array(bytes));

let customRandom = (alphabet, size, getRandom) => {
  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes
  // values closer to the alphabet size. The bitmask calculates the closest
  // `2^31 - 1` number, which exceeds the alphabet size.
  // For example, the bitmask for the alphabet size 30 is 31 (00011111).
  // `Math.clz32` is not used, because it is not available in browsers.
  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1;
  // Though, the bitmask solution is not perfect since the bytes exceeding
  // the alphabet size are refused. Therefore, to reliably generate the ID,
  // the random bytes redundancy has to be satisfied.

  // Note: every hardware random generator call is performance expensive,
  // because the system call for entropy collection takes a lot of time.
  // So, to avoid additional system calls, extra bytes are requested in advance.

  // Next, a step determines how many random bytes to generate.
  // The number of random bytes gets decided upon the ID size, mask,
  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance
  // according to benchmarks).

  // `-~f => Math.ceil(f)` if f is a float
  // `-~i => i + 1` if i is an integer
  let step = -~((1.6 * mask * size) / alphabet.length);

  return () => {
    let id = '';
    while (true) {
      let bytes = getRandom(step);
      // A compact alternative for `for (var i = 0; i < step; i++)`.
      let j = step;
      while (j--) {
        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.
        id += alphabet[bytes[j] & mask] || '';
        if (id.length === size) return id
      }
    }
  }
};

let customAlphabet = (alphabet, size) => customRandom(alphabet, size, random);

let nanoid = (size = 21) => {
  let id = '';
  let bytes = crypto.getRandomValues(new Uint8Array(size));

  // A compact alternative for `for (var i = 0; i < step; i++)`.
  while (size--) {
    // It is incorrect to use bytes exceeding the alphabet size.
    // The following mask reduces the random byte in the 0-255 value
    // range to the 0-63 value range. Therefore, adding hacks, such
    // as empty string fallback or magic numbers, is unneccessary because
    // the bitmask trims bytes down to the alphabet size.
    let byte = bytes[size] & 63;
    if (byte < 36) {
      // `0-9a-z`
      id += byte.toString(36);
    } else if (byte < 62) {
      // `A-Z`
      id += (byte - 26).toString(36).toUpperCase();
    } else if (byte < 63) {
      id += '_';
    } else {
      id += '-';
    }
  }
  return id
};

var index_browser = /*#__PURE__*/Object.freeze({
    __proto__: null,
    nanoid: nanoid,
    customAlphabet: customAlphabet,
    customRandom: customRandom,
    urlAlphabet: urlAlphabet,
    random: random
});

var provider$3 = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.NotificationsProvider = void 0;







function NotificationsProvider(_a) {
    var children = _a.children;
    var _b = react.useReducer(reducer$2.notificationReducer, model$2.DEFAULT_NOTIFICATIONS), notifications = _b[0], dispatch = _b[1];
    var _c = hooks.useEthers(), chainId = _c.chainId, account = _c.account;
    react.useEffect(function () {
        if (account && chainId) {
            dispatch({
                type: 'ADD_NOTIFICATION',
                chainId: chainId,
                notification: {
                    type: 'walletConnected',
                    id: index_browser.nanoid(),
                    submittedAt: Date.now(),
                    address: account
                }
            });
        }
    }, [account, chainId]);
    var addNotification = react.useCallback(function (_a) {
        var notification = _a.notification, chainId = _a.chainId;
        dispatch({
            type: 'ADD_NOTIFICATION',
            chainId: chainId,
            notification: __assign(__assign({}, notification), { id: index_browser.nanoid() })
        });
    }, [dispatch]);
    var removeNotification = react.useCallback(function (_a) {
        var notificationId = _a.notificationId, chainId = _a.chainId;
        dispatch({
            type: 'REMOVE_NOTIFICATION',
            chainId: chainId,
            notificationId: notificationId
        });
    }, [dispatch]);
    return (jsxRuntime.jsx(context$3.NotificationsContext.Provider, { value: { addNotification: addNotification, notifications: notifications, removeNotification: removeNotification }, children: children }, void 0));
}
exports.NotificationsProvider = NotificationsProvider;

});

function _inheritsLoose$1(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _getPrototypeOf$1(o) {
  _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf$1(o);
}

function _setPrototypeOf$1(o, p) {
  _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf$1(o, p);
}

function _isNativeReflectConstruct$1() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct$1(Parent, args, Class) {
  if (_isNativeReflectConstruct$1()) {
    _construct$1 = Reflect.construct;
  } else {
    _construct$1 = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf$1(instance, Class.prototype);
      return instance;
    };
  }

  return _construct$1.apply(null, arguments);
}

function _isNativeFunction$1(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _wrapNativeSuper$1(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper$1 = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction$1(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct$1(Class, arguments, _getPrototypeOf$1(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf$1(Wrapper, Class);
  };

  return _wrapNativeSuper$1(Class);
}

var RequestError = /*#__PURE__*/function (_Error) {
  _inheritsLoose$1(RequestError, _Error);

  function RequestError(message, code, data) {
    var _this;

    _this = _Error.call(this) || this;
    _this.code = code;
    _this.data = data;
    _this.name = _this.constructor.name;
    _this.message = message;
    return _this;
  }

  return RequestError;
}( /*#__PURE__*/_wrapNativeSuper$1(Error));

var MiniRpcProvider = function MiniRpcProvider(chainId, url) {
  var _this3 = this;

  var _this2 = this;

  this.isMetaMask = false;

  this.sendAsync = function (request, callback) {
    console.log('sendAsync', request.method, request.params);

    _this2.request(request.method, request.params).then(function (result) {
      return callback(null, {
        jsonrpc: '2.0',
        id: request.id,
        result: result
      });
    })["catch"](function (error) {
      return callback(error, null);
    });
  };

  this.request = function (method, params) {
    try {
      if (typeof method !== 'string') {
        params = method.params;
        method = method.method;
      }

      return Promise.resolve(fetch(_this3.url, {
        method: 'POST',
        body: JSON.stringify({
          jsonrpc: '2.0',
          id: 1,
          method: method,
          params: params
        })
      })).then(function (response) {
        if (!response.ok) throw new RequestError(response.status + ": " + response.statusText, -32000);
        return Promise.resolve(response.json()).then(function (body) {
          if ('error' in body) {
            var _body$error, _body$error2, _body$error3;

            throw new RequestError(body == null ? void 0 : (_body$error = body.error) == null ? void 0 : _body$error.message, body == null ? void 0 : (_body$error2 = body.error) == null ? void 0 : _body$error2.code, body == null ? void 0 : (_body$error3 = body.error) == null ? void 0 : _body$error3.data);
          } else if ('result' in body) {
            return body.result;
          } else {
            throw new RequestError("Received unexpected JSON-RPC response to " + method + " request.", -32000, body);
          }
        });
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  this.chainId = chainId;
  this.url = url;
  var parsed = new URL(url);
  this.host = parsed.host;
  this.path = parsed.pathname;
};

var NetworkConnector = /*#__PURE__*/function (_AbstractConnector) {
  _inheritsLoose$1(NetworkConnector, _AbstractConnector);

  function NetworkConnector(_ref) {
    var _this4;

    var urls = _ref.urls,
        defaultChainId = _ref.defaultChainId;
    !(defaultChainId || Object.keys(urls).length === 1) ?  invariant(false) : void 0;
    _this4 = _AbstractConnector.call(this, {
      supportedChainIds: Object.keys(urls).map(function (k) {
        return Number(k);
      })
    }) || this;
    _this4.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);
    _this4.providers = Object.keys(urls).reduce(function (accumulator, chainId) {
      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)]);
      return accumulator;
    }, {});
    return _this4;
  }

  var _proto = NetworkConnector.prototype;

  _proto.activate = function activate() {
    try {
      var _this6 = this;

      return Promise.resolve({
        provider: _this6.providers[_this6.currentChainId],
        chainId: _this6.currentChainId,
        account: null
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getProvider = function getProvider() {
    try {
      var _this8 = this;

      return Promise.resolve(_this8.providers[_this8.currentChainId]);
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getChainId = function getChainId() {
    try {
      var _this10 = this;

      return Promise.resolve(_this10.currentChainId);
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getAccount = function getAccount() {
    return Promise.resolve(null);
  };

  _proto.deactivate = function deactivate() {
    return;
  };

  _proto.changeChainId = function changeChainId(chainId) {
    !Object.keys(this.providers).includes(chainId.toString()) ?  invariant(false) : void 0;
    this.currentChainId = chainId;
    this.emitUpdate({
      provider: this.providers[this.currentChainId],
      chainId: chainId
    });
  };

  return NetworkConnector;
}(AbstractConnector);

var networkConnector_esm = /*#__PURE__*/Object.freeze({
    __proto__: null,
    NetworkConnector: NetworkConnector,
    RequestError: RequestError
});

var ReadOnlyProviderActivator_1 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.ReadOnlyProviderActivator = void 0;



function ReadOnlyProviderActivator(_a) {
    var readOnlyChainId = _a.readOnlyChainId, readOnlyUrls = _a.readOnlyUrls;
    var _b = hooks.useEthers(), activate = _b.activate, account = _b.account, connectedChainId = _b.chainId, active = _b.active, connector = _b.connector;
    react.useEffect(function () {
        if (!active || (connector instanceof networkConnector_esm.NetworkConnector && connectedChainId !== readOnlyChainId)) {
            activate(new networkConnector_esm.NetworkConnector({ defaultChainId: readOnlyChainId, urls: readOnlyUrls || [] }));
        }
    }, [readOnlyChainId, readOnlyUrls, active, account, connectedChainId, connector]);
    return null;
}
exports.ReadOnlyProviderActivator = ReadOnlyProviderActivator;

});

var model$3 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.DEFAULT_STORED_TRANSACTIONS = void 0;
exports.DEFAULT_STORED_TRANSACTIONS = {};

});

var context$4 = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.useTransactionsContext = exports.TransactionsContext = void 0;


exports.TransactionsContext = react.createContext({
    transactions: model$3.DEFAULT_STORED_TRANSACTIONS,
    addTransaction: function () { return undefined; }
});
function useTransactionsContext() {
    return react.useContext(exports.TransactionsContext);
}
exports.useTransactionsContext = useTransactionsContext;

});

var reducer$3 = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (commonjsGlobal && commonjsGlobal.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
exports.__esModule = true;
exports.transactionReducer = void 0;

function isChainId(chainId) {
    return Object.values(constants.ChainId).includes(chainId);
}
function transactionReducer(state, action) {
    var _a, _b;
    var _c;
    switch (action.type) {
        case 'ADD_TRANSACTION': {
            var chainId = action.payload.transaction.chainId;
            if (isChainId(chainId)) {
                return __assign(__assign({}, state), (_a = {}, _a[chainId] = __spreadArrays([action.payload], ((_c = state[chainId]) !== null && _c !== void 0 ? _c : [])), _a));
            }
            else {
                throw TypeError('Unsupported chain');
            }
        }
        case 'UPDATE_TRANSACTIONS':
            return __assign(__assign({}, state), (_b = {}, _b[action.chainId] = __spreadArrays(action.transactions), _b));
    }
}
exports.transactionReducer = transactionReducer;

});

var provider$4 = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (commonjsGlobal && commonjsGlobal.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (commonjsGlobal && commonjsGlobal.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
exports.__esModule = true;
exports.TransactionProvider = void 0;








function TransactionProvider(_a) {
    var _this = this;
    var children = _a.children;
    var _b = hooks.useEthers(), chainId = _b.chainId, library = _b.library;
    var blockNumber = context$1.useBlockNumber();
    var _c = hooks.useLocalStorage('transactions'), storage = _c[0], setStorage = _c[1];
    var _d = react.useReducer(reducer$3.transactionReducer, storage !== null && storage !== void 0 ? storage : model$3.DEFAULT_STORED_TRANSACTIONS), transactions = _d[0], dispatch = _d[1];
    var addNotification = context$3.useNotificationsContext().addNotification;
    react.useEffect(function () {
        setStorage(transactions);
    }, [transactions]);
    var addTransaction = react.useCallback(function (payload) {
        dispatch({
            type: 'ADD_TRANSACTION',
            payload: payload
        });
        addNotification({
            notification: {
                type: 'transactionStarted',
                transaction: payload.transaction,
                submittedAt: payload.submittedAt,
                transactionName: payload.transactionName
            },
            chainId: payload.transaction.chainId
        });
    }, [dispatch]);
    react.useEffect(function () {
        var updateTransactions = function () { return __awaiter(_this, void 0, void 0, function () {
            var checkTransaction, chainTransactions, newTransactions, _i, chainTransactions_1, tx, newTransaction;
            var _this = this;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!chainId || !library || !blockNumber) {
                            return [2 /*return*/];
                        }
                        checkTransaction = function (tx) { return __awaiter(_this, void 0, void 0, function () {
                            var receipt, type, error_1;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (tx.receipt || !shouldCheck(blockNumber, tx)) {
                                            return [2 /*return*/, tx];
                                        }
                                        _a.label = 1;
                                    case 1:
                                        _a.trys.push([1, 3, , 4]);
                                        return [4 /*yield*/, library.getTransactionReceipt(tx.transaction.hash)];
                                    case 2:
                                        receipt = _a.sent();
                                        if (receipt) {
                                            type = receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';
                                            addNotification({
                                                notification: {
                                                    type: type,
                                                    submittedAt: Date.now(),
                                                    transaction: tx.transaction,
                                                    receipt: receipt,
                                                    transactionName: tx.transactionName
                                                },
                                                chainId: chainId
                                            });
                                            return [2 /*return*/, __assign(__assign({}, tx), { receipt: receipt })];
                                        }
                                        else {
                                            return [2 /*return*/, __assign(__assign({}, tx), { lastCheckedBlockNumber: blockNumber })];
                                        }
                                    case 3:
                                        error_1 = _a.sent();
                                        console.error("failed to check transaction hash: " + tx.transaction.hash, error_1);
                                        return [3 /*break*/, 4];
                                    case 4: return [2 /*return*/, tx];
                                }
                            });
                        }); };
                        chainTransactions = (_a = transactions[chainId]) !== null && _a !== void 0 ? _a : [];
                        newTransactions = [];
                        _i = 0, chainTransactions_1 = chainTransactions;
                        _b.label = 1;
                    case 1:
                        if (!(_i < chainTransactions_1.length)) return [3 /*break*/, 4];
                        tx = chainTransactions_1[_i];
                        return [4 /*yield*/, checkTransaction(tx)];
                    case 2:
                        newTransaction = _b.sent();
                        newTransactions.push(newTransaction);
                        _b.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4:
                        dispatch({ type: 'UPDATE_TRANSACTIONS', chainId: chainId, transactions: newTransactions });
                        return [2 /*return*/];
                }
            });
        }); };
        updateTransactions();
    }, [chainId, library, blockNumber]);
    return jsxRuntime.jsx(context$4.TransactionsContext.Provider, { value: { transactions: transactions, addTransaction: addTransaction }, children: children }, void 0);
}
exports.TransactionProvider = TransactionProvider;
function shouldCheck(blockNumber, tx) {
    if (tx.receipt) {
        return false;
    }
    if (!tx.lastCheckedBlockNumber) {
        return true;
    }
    var blocksSinceCheck = blockNumber - tx.lastCheckedBlockNumber;
    if (blocksSinceCheck < 1) {
        return false;
    }
    var minutesPending = (Date.now() - tx.submittedAt) / 1000 / 60;
    if (minutesPending > 60) {
        // every 10 blocks if pending for longer than an hour
        return blocksSinceCheck > 9;
    }
    if (minutesPending > 5) {
        // every 3 blocks if pending more than 5 minutes
        return blocksSinceCheck > 2;
    }
    // otherwise every block
    return true;
}

});

var DAppProvider_1 = createCommonjsModule(function (module, exports) {
var __assign = (commonjsGlobal && commonjsGlobal.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.DAppProvider = void 0;










function DAppProvider(_a) {
    var config = _a.config, children = _a.children;
    return (jsxRuntime.jsx(provider.ConfigProvider, __assign({ config: config }, { children: jsxRuntime.jsx(DAppProviderWithConfig, { children: children }, void 0) }), void 0));
}
exports.DAppProvider = DAppProvider;
function DAppProviderWithConfig(_a) {
    var children = _a.children;
    var _b = context.useConfig(), multicallAddresses = _b.multicallAddresses, readOnlyChainId = _b.readOnlyChainId, readOnlyUrls = _b.readOnlyUrls;
    var multicallAddressesMerged = __assign(__assign({}, constants.MULTICALL_ADDRESSES), multicallAddresses);
    return (jsxRuntime.jsx(EthersProvider_1.EthersProvider, { children: jsxRuntime.jsxs(provider$1.BlockNumberProvider, { children: [readOnlyChainId && readOnlyUrls && (jsxRuntime.jsx(ReadOnlyProviderActivator_1.ReadOnlyProviderActivator, { readOnlyChainId: readOnlyChainId, readOnlyUrls: readOnlyUrls }, void 0)),
                jsxRuntime.jsx(chainState.ChainStateProvider, __assign({ multicallAddresses: multicallAddressesMerged }, { children: jsxRuntime.jsx(provider$3.NotificationsProvider, { children: jsxRuntime.jsx(provider$4.TransactionProvider, { children: children }, void 0) }, void 0) }), void 0)] }, void 0) }, void 0));
}

});

var blockNumber = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (commonjsGlobal && commonjsGlobal.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
__exportStar(context$1, exports);
__exportStar(provider$1, exports);
__exportStar(reducer, exports);

});

var providers = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (commonjsGlobal && commonjsGlobal.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
exports.useNotificationsContext = exports.useTransactionsContext = void 0;
__exportStar(DAppProvider_1, exports);
__exportStar(blockNumber, exports);
__exportStar(chainState, exports);

__createBinding(exports, context$4, "useTransactionsContext");

__createBinding(exports, context$3, "useNotificationsContext");
__exportStar(model$3, exports);
__exportStar(model$2, exports);

});

var chain = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.isTestChain = exports.getChainName = exports.getExplorerTransactionLink = exports.getExplorerAddressLink = void 0;

function etherscanNetworkPrefix(chainId) {
    switch (chainId) {
        case constants.ChainId.Mainnet:
            return "";
        case constants.ChainId.Ropsten:
        case constants.ChainId.Kovan:
        case constants.ChainId.Rinkeby:
        case constants.ChainId.Goerli:
            return getChainName(chainId).toLocaleLowerCase() + '.';
    }
}
function getExplorerAddressLink(address, chainId) {
    switch (chainId) {
        case constants.ChainId.Mainnet:
        case constants.ChainId.Ropsten:
        case constants.ChainId.Kovan:
        case constants.ChainId.Rinkeby:
        case constants.ChainId.Goerli:
            return "https://" + etherscanNetworkPrefix(chainId) + "etherscan.io/address/" + address;
        case constants.ChainId.xDai:
            return "https://blockscout.com/poa/xdai/address/" + address + "/transactions";
    }
}
exports.getExplorerAddressLink = getExplorerAddressLink;
function getExplorerTransactionLink(transactionHash, chainId) {
    switch (chainId) {
        case constants.ChainId.Mainnet:
        case constants.ChainId.Ropsten:
        case constants.ChainId.Kovan:
        case constants.ChainId.Rinkeby:
        case constants.ChainId.Goerli:
            return "https://" + etherscanNetworkPrefix(chainId) + "etherscan.io/tx/" + transactionHash;
        case constants.ChainId.xDai:
            return "https://blockscout.com/poa/xdai/tx/" + transactionHash + "/internal-transactions";
    }
}
exports.getExplorerTransactionLink = getExplorerTransactionLink;
function getChainName(chainId) {
    return constants.CHAIN_NAMES[chainId];
}
exports.getChainName = getChainName;
function isTestChain(chainId) {
    return constants.TEST_CHAINS.includes(chainId);
}
exports.isTestChain = isTestChain;

});

try {
    const anyGlobal = window;
    if (anyGlobal._ethers == null) {
        anyGlobal._ethers = ethers;
    }
}
catch (error) { }

var lib_esm$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    ethers: ethers,
    Signer: Signer,
    Wallet: Wallet,
    VoidSigner: VoidSigner,
    getDefaultProvider: getDefaultProvider,
    providers: lib_esm$4,
    Contract: Contract,
    ContractFactory: ContractFactory,
    BigNumber: BigNumber$1,
    FixedNumber: FixedNumber$1,
    constants: index,
    get errors () { return ErrorCode; },
    logger: logger,
    utils: utils,
    wordlists: wordlists,
    version: version,
    Wordlist: Wordlist
});

var common = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.shortenString = void 0;
function shortenString(str) {
    return str.substring(0, 6) + '...' + str.substring(str.length - 4);
}
exports.shortenString = shortenString;

});

var address = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.addressEqual = exports.compareAddress = exports.shortenIfAddress = exports.shortenAddress = void 0;



function shortenAddress(address) {
    try {
        var formattedAddress = lib_esm$1.utils.getAddress(address);
        return common.shortenString(formattedAddress);
    }
    catch (_a) {
        throw new TypeError("Invalid input, address can't be parsed");
    }
}
exports.shortenAddress = shortenAddress;
function shortenIfAddress(address) {
    if (typeof address === 'string' && address.length > 0) {
        return shortenAddress(address);
    }
    return '';
}
exports.shortenIfAddress = shortenIfAddress;
function compareAddress(firstAddress, secondAddress) {
    try {
        var parsedFirstAddress = lib_esm.BigNumber.from(firstAddress);
        var parsedSecondAddress = lib_esm.BigNumber.from(secondAddress);
        if (parsedFirstAddress.gt(parsedSecondAddress)) {
            return 1;
        }
        if (parsedFirstAddress.lt(parsedSecondAddress)) {
            return -1;
        }
        return 0;
    }
    catch (_a) {
        throw new TypeError("Invalid input, address can't be parsed");
    }
}
exports.compareAddress = compareAddress;
function addressEqual(firstAddress, secondAddress) {
    try {
        return lib_esm$1.utils.getAddress(firstAddress) === lib_esm$1.utils.getAddress(secondAddress);
    }
    catch (_a) {
        throw new TypeError("Invalid input, address can't be parsed");
    }
}
exports.addressEqual = addressEqual;

});

var transaction = createCommonjsModule(function (module, exports) {
exports.__esModule = true;
exports.shortenIfTransactionHash = exports.shortenTransactionHash = void 0;

function shortenTransactionHash(transactionHash) {
    if (transactionHash.length < 10) {
        throw new TypeError('Invalid input, transaction hash need to have at least 10 characters');
    }
    return common.shortenString(transactionHash);
}
exports.shortenTransactionHash = shortenTransactionHash;
function shortenIfTransactionHash(transactionHash) {
    if (typeof transactionHash === 'string' && transactionHash.length > 0) {
        return shortenTransactionHash(transactionHash);
    }
    return '';
}
exports.shortenIfTransactionHash = shortenIfTransactionHash;

});

var helpers = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (commonjsGlobal && commonjsGlobal.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
__exportStar(chain, exports);
__exportStar(address, exports);
__exportStar(transaction, exports);

});

var src = createCommonjsModule(function (module, exports) {
var __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (commonjsGlobal && commonjsGlobal.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
exports.__esModule = true;
__exportStar(constants, exports);
__exportStar(providers, exports);
__exportStar(hooks, exports);
__exportStar(model, exports);
__exportStar(helpers, exports);

});

var ChainId = src.ChainId;
var DAppProvider = src.DAppProvider;
var shortenTransactionHash = src.shortenTransactionHash;
var useContractCall = src.useContractCall;
var useEthers = src.useEthers;
var useTransactionsContext = src.useTransactionsContext;
export { ChainId, DAppProvider, shortenTransactionHash, useContractCall, useEthers, useTransactionsContext };
